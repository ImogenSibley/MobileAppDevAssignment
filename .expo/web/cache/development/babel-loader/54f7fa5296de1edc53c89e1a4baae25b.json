{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport CustomButton from \"../../components/customButton\";\nimport CustomButtonSmall from \"../../components/customButtonSmall\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar OtherProfile = function OtherProfile(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstName = _useState4[0],\n      setFirstName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastName = _useState6[0],\n      setLastName = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      numOfFriends = _useState8[0],\n      setNumOfFriends = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      posts = _useState10[0],\n      setPosts = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isLoading = _useState12[0],\n      setIsLoading = _useState12[1];\n\n  var getUserData = function getUserData() {\n    var requestedUserID, value;\n    return _regeneratorRuntime.async(function getUserData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            requestedUserID = route.params.requestedUserID;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 3:\n            value = _context2.sent;\n            return _context2.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + requestedUserID, {\n              'headers': {\n                'X-Authorization': value\n              }\n            }).then(function (response) {\n              if (response.status === 200) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                throw 'Something went wrong';\n              }\n            }).then(function _callee(responseJson) {\n              var first, last, emailAddress, friendCount;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      first = responseJson.first_name;\n                      setFirstName(first);\n                      last = responseJson.last_name;\n                      setLastName(last);\n                      emailAddress = responseJson.email;\n                      setEmail(emailAddress);\n                      friendCount = responseJson.friend_count;\n                      setNumOfFriends(friendCount);\n\n                    case 8:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getAllPosts = function getAllPosts() {\n    var value, requestedUserID;\n    return _regeneratorRuntime.async(function getAllPosts$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context3.sent;\n            requestedUserID = route.params.requestedUserID;\n            return _context3.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + requestedUserID + \"/post\", {\n              'headers': {\n                'X-Authorization': value\n              }\n            }).then(function (response) {\n              if (response.status === 200) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              setPosts(responseJson);\n              setIsLoading(false);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addLike = function addLike(postID) {\n    var value, userID;\n    return _regeneratorRuntime.async(function addLike$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n          case 2:\n            value = _context4.sent;\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@user_id\"));\n\n          case 5:\n            userID = _context4.sent;\n            return _context4.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post/\" + postID, {\n              method: 'POST',\n              headers: {\n                \"X-Authorization\": value\n              }\n            }).then(function (response) {\n              if (response.status === 200 || response.status === 201) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                console.log(response.status);\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              console.log(\"Post Liked Successfully! - \" + responseJson);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var removeLike = function removeLike(postID) {\n    var value, userID;\n    return _regeneratorRuntime.async(function removeLike$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n          case 2:\n            value = _context5.sent;\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@user_id\"));\n\n          case 5:\n            userID = _context5.sent;\n            return _context5.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post/\" + postID, {\n              method: 'DELETE',\n              headers: {\n                \"X-Authorization\": value\n              }\n            }).then(function (response) {\n              if (response.status === 200 || response.status === 201) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                console.log(response.status);\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              console.log(\"Removed Like Successfully! - \" + responseJson);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var ItemView = function ItemView(_ref2) {\n    var item = _ref2.item;\n    return _jsx(View, {\n      style: styles.postContainer,\n      children: _jsxs(Text, {\n        style: styles.post,\n        children: [item.id, item.author.first_name, ' ', item.author.last_name, ' - ', item.text, ' ', item.timestamp, ' - Likes: ', item.numLikes, ' ', _jsx(CustomButtonSmall, {\n          text: \"+Like\",\n          onPress: function onPress() {\n            return addLike(item.post_id);\n          }\n        }), ' ', _jsx(CustomButtonSmall, {\n          text: \"-Like\",\n          onPress: function onPress() {\n            return removeLike(item.post_id);\n          }\n        })]\n      })\n    });\n  };\n\n  var ItemSeperatorView = function ItemSeperatorView() {\n    return _jsx(View, {\n      style: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: 'white'\n      }\n    });\n  };\n\n  var checkLoggedIn = function checkLoggedIn() {\n    var value;\n    return _regeneratorRuntime.async(function checkLoggedIn$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context6.sent;\n\n            if (value == null) {\n              navigation.navigate('Login');\n            }\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    checkLoggedIn();\n    getUserData();\n    getAllPosts();\n  }, []);\n\n  if (isLoading) {\n    return _jsx(SafeAreaView, {\n      style: styles.root,\n      children: _jsx(View, {\n        children: _jsx(Text, {\n          style: styles.name,\n          children: \"Loading...\"\n        })\n      })\n    });\n  } else {\n    return _jsxs(SafeAreaView, {\n      style: styles.root,\n      children: [_jsx(View, {\n        style: styles.header\n      }), _jsx(Image, {\n        style: styles.avatar,\n        source: {\n          uri: 'https://miro.medium.com/max/3150/1*I8orYDhyFrbI-p21DstL6A.jpeg'\n        }\n      }), _jsx(View, {\n        style: styles.body,\n        children: _jsxs(View, {\n          style: styles.container,\n          children: [_jsxs(Text, {\n            style: styles.name,\n            children: [firstName, \" \", lastName]\n          }), _jsx(Text, {\n            style: styles.info,\n            children: email\n          }), _jsxs(Text, {\n            style: styles.info,\n            children: [\"Following: \", numOfFriends]\n          }), _jsx(CustomButton, {\n            text: \"Friends\"\n          }), _jsx(FlatList, {\n            data: posts,\n            keyExtractor: function keyExtractor(item, index) {\n              return index.toString();\n            },\n            ItemSeperatorComponent: ItemSeperatorView,\n            renderItem: ItemView\n          })]\n        })\n      })]\n    });\n  }\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: '#ffcfe6'\n  },\n  header: {\n    backgroundColor: \"#45ded0\",\n    height: 200\n  },\n  avatar: {\n    width: 130,\n    height: 130,\n    borderRadius: 63,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10,\n    alignSelf: 'center',\n    position: 'absolute',\n    marginTop: 130\n  },\n  body: {\n    marginTop: 40\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 30\n  },\n  name: {\n    fontSize: 28,\n    color: \"#696969\",\n    fontWeight: \"600\",\n    alignItems: 'center'\n  },\n  info: {\n    fontSize: 16,\n    color: \"#696969\",\n    marginTop: 10\n  },\n  postContainer: {\n    justifyContent: 'space-between',\n    alignSelf: 'center',\n    alignContent: 'center',\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderColor: '#45ded0',\n    borderWidth: 1\n  },\n  post: {\n    fontSize: 16,\n    color: \"#696969\",\n    fontWeight: 'bold',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 10\n  }\n});\nexport default OtherProfile;","map":{"version":3,"sources":["E:/Year 3/Mobile App Dev/MADAssignment/master/screens/OtherProfile/OtherProfile.js"],"names":["React","useState","useEffect","CustomButton","CustomButtonSmall","AsyncStorage","OtherProfile","route","navigation","email","setEmail","firstName","setFirstName","lastName","setLastName","numOfFriends","setNumOfFriends","posts","setPosts","isLoading","setIsLoading","getUserData","requestedUserID","params","getItem","value","fetch","then","response","status","json","navigate","responseJson","first","first_name","last","last_name","emailAddress","friendCount","friend_count","catch","error","console","log","getAllPosts","addLike","postID","userID","method","headers","removeLike","ItemView","item","styles","postContainer","post","id","author","text","timestamp","numLikes","post_id","ItemSeperatorView","height","width","backgroundColor","checkLoggedIn","root","name","header","avatar","uri","body","container","info","index","toString","StyleSheet","create","flex","borderRadius","borderWidth","borderColor","marginBottom","alignSelf","position","marginTop","alignItems","padding","fontSize","color","fontWeight","justifyContent","alignContent","paddingHorizontal","paddingVertical"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Text, View, SafeAreaView, StyleSheet, Image, FlatList } from 'react-native';\r\nimport CustomButton from '../../components/customButton'; \r\nimport CustomButtonSmall from '../../components/customButtonSmall';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst OtherProfile = ({route, navigation}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [numOfFriends, setNumOfFriends] = useState('');\r\n    const [posts, setPosts] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const getUserData = async () => {\r\n        let requestedUserID = route.params.requestedUserID;\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\"+requestedUserID, {\r\n            'headers': {\r\n            'X-Authorization':  value\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if(response.status === 200){\r\n                return response.json()\r\n            }else if(response.status === 401){\r\n              navigation.navigate(\"Login\");\r\n            }else{\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then(async (responseJson) => {\r\n            let first = responseJson.first_name;\r\n            setFirstName(first);\r\n            let last = responseJson.last_name;\r\n            setLastName(last);\r\n            let emailAddress = responseJson.email;\r\n            setEmail(emailAddress);\r\n            let friendCount = responseJson.friend_count;\r\n            setNumOfFriends(friendCount);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const getAllPosts = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        let requestedUserID = route.params.requestedUserID;\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\" + requestedUserID + \"/post\", {\r\n            'headers': {\r\n                'X-Authorization': value\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    return response.json()\r\n                } else if (response.status === 401) {\r\n                    navigation.navigate(\"Login\");\r\n                } else {\r\n                    throw 'Something went wrong';\r\n                }\r\n            }).then((responseJson) => {\r\n                //console.log(responseJson);\r\n                setPosts(responseJson);\r\n                setIsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const addLike = async (postID) => {\r\n        const value = await AsyncStorage.getItem(\"@session_token\");\r\n        const userID = await AsyncStorage.getItem(\"@user_id\")\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post/\" +postID, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"X-Authorization\": value,\r\n            },\r\n        }).then((response) => {\r\n            if (response.status === 200 || response.status === 201) {\r\n                return response.json()\r\n            } else if (response.status === 401) {\r\n                navigation.navigate(\"Login\");\r\n            } else {\r\n                console.log(response.status);\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            console.log(\"Post Liked Successfully! - \"+responseJson);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n      const removeLike = async (postID) => {\r\n        const value = await AsyncStorage.getItem(\"@session_token\");\r\n        const userID = await AsyncStorage.getItem(\"@user_id\")\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post/\" +postID, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"X-Authorization\": value,\r\n            },\r\n        }).then((response) => {\r\n            if (response.status === 200 || response.status === 201) {\r\n                return response.json()\r\n            } else if (response.status === 401) {\r\n                navigation.navigate(\"Login\");\r\n            } else {\r\n                console.log(response.status);\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            console.log(\"Removed Like Successfully! - \"+responseJson);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const ItemView = ({ item }) => {\r\n        return (\r\n            <View style={styles.postContainer}>\r\n                <Text style={styles.post}>\r\n                    {item.id}{item.author.first_name}{' '}{item.author.last_name}{' - '}{item.text}{' '}{item.timestamp}{' - Likes: '}{item.numLikes}\r\n                    {' '}<CustomButtonSmall text=\"+Like\" onPress={() => addLike(item.post_id)}/>{' '}<CustomButtonSmall text=\"-Like\" onPress={() => removeLike(item.post_id)}/>\r\n                </Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    const ItemSeperatorView = () => {\r\n        return (\r\n            <View\r\n                style={{ height: 0.5, width: '100%', backgroundColor: 'white' }}\r\n            />\r\n        );\r\n    }\r\n    \r\n    const checkLoggedIn = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        if (value == null) {\r\n            navigation.navigate('Login');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        checkLoggedIn();\r\n        getUserData();\r\n        getAllPosts();\r\n    }, [])\r\n    \r\n    if (isLoading) {\r\n        return (\r\n            <SafeAreaView style={styles.root}>\r\n                <View><Text style={styles.name}>Loading...</Text></View>\r\n            </SafeAreaView>\r\n        );\r\n    } else {\r\n\treturn (\r\n\t\t<SafeAreaView style={styles.root}>\r\n            <View style={styles.header}></View>\r\n            <Image style={styles.avatar} source={{uri: 'https://miro.medium.com/max/3150/1*I8orYDhyFrbI-p21DstL6A.jpeg'}}/>\r\n                <View style={styles.body}>\r\n                    <View style={styles.container}>\r\n                        <Text style={styles.name}>{firstName} {lastName}</Text>\r\n                        <Text style={styles.info}>{email}</Text>\r\n                        <Text style={styles.info}>Following: {numOfFriends}</Text>\r\n                        {/*If not already friends, show button to add user as friend*/}\r\n\t\t\t            <CustomButton text=\"Friends\"/>\r\n                        <FlatList\r\n                            data={posts}\r\n                            keyExtractor={(item, index) => index.toString()}\r\n                            ItemSeperatorComponent={ItemSeperatorView}\r\n                            renderItem={ItemView}\r\n                        />\r\n                    </View>\r\n                </View>\r\n\t\t</SafeAreaView>\r\n\t);\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    root: {\r\n        flex: 1,\r\n        backgroundColor: '#ffcfe6',\r\n    },\r\n    header: {\r\n        backgroundColor: \"#45ded0\",\r\n        height: 200,\r\n    },\r\n    avatar: {\r\n        width: 130,\r\n        height: 130,\r\n        borderRadius: 63,\r\n        borderWidth: 4,\r\n        borderColor: \"white\",\r\n        marginBottom: 10,\r\n        alignSelf: 'center',\r\n        position: 'absolute',\r\n        marginTop: 130\r\n    },\r\n    body: {\r\n        marginTop: 40,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        padding: 30,\r\n    },\r\n    name: {\r\n        fontSize: 28,\r\n        color: \"#696969\",\r\n        fontWeight: \"600\",\r\n        alignItems: 'center',\r\n    },\r\n    info: {\r\n        fontSize: 16,\r\n        color: \"#696969\",\r\n        marginTop: 10\r\n    },\r\n    postContainer: {\r\n        justifyContent: 'space-between',\r\n        alignSelf: 'center',\r\n        alignContent: 'center',\r\n        backgroundColor: '#ffffff',\r\n        width: '90%',\r\n        borderColor: '#45ded0',\r\n        borderWidth: 1,\r\n    },\r\n    post: {\r\n        fontSize: 16,\r\n        color: \"#696969\",\r\n        fontWeight: 'bold',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 10,\r\n    }\r\n});\r\n\r\nexport default OtherProfile;\r\n"]},"metadata":{},"sourceType":"module"}
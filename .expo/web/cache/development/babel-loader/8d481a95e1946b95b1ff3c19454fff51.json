{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport CustomInput from \"../../components/customInput\";\nimport CustomButton from \"../../components/customButton\";\nimport CustomButtonSmall from \"../../components/customButtonSmall\";\nimport CalendarPicker from 'react-native-calendar-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Drafts = function Drafts(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      post = _useState2[0],\n      setPost = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMess = _useState6[0],\n      setErrorMess = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedStartDate = _useState8[0],\n      setSelectedStartDate = _useState8[1];\n\n  useEffect(function () {\n    navigation.addListener('focus', function () {\n      refreshPage();\n    });\n    checkLoggedIn();\n    viewDraft();\n  }, []);\n\n  var refreshPage = function refreshPage() {\n    checkLoggedIn();\n    viewDraft();\n  };\n\n  var onDateChange = function onDateChange(type, date) {\n    setSelectedStartDate(date);\n  };\n\n  var viewDraft = function viewDraft() {\n    var draft;\n    return _regeneratorRuntime.async(function viewDraft$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_draft'));\n\n          case 2:\n            draft = _context.sent;\n            setPost(draft);\n            setIsLoading(false);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var saveDraft = function saveDraft(textInput) {\n    return _regeneratorRuntime.async(function saveDraft$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@session_draft', textInput));\n\n          case 2:\n            setErrorMess(\"Draft Saved.\");\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var postDraft = function postDraft(textInput) {\n    var value, userID;\n    return _regeneratorRuntime.async(function postDraft$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n          case 2:\n            value = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@user_id\"));\n\n          case 5:\n            userID = _context3.sent;\n\n            if (!(textInput != '')) {\n              _context3.next = 10;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post\", {\n              method: 'POST',\n              headers: {\n                \"X-Authorization\": value,\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"text\": textInput\n              })\n            }).then(function (response) {\n              if (response.status === 200 || response.status === 201) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                console.log(response.status);\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              setErrorMess('Draft Posted.');\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 10:\n            setErrorMess('Please write at least 1 character before posting.');\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var deleteDraft = function deleteDraft() {\n    return _regeneratorRuntime.async(function deleteDraft$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem('@session_draft'));\n\n          case 2:\n            setErrorMess('Draft Deleted.');\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkLoggedIn = function checkLoggedIn() {\n    var value;\n    return _regeneratorRuntime.async(function checkLoggedIn$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context5.sent;\n\n            if (value == null) {\n              navigation.navigate('Login');\n            }\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (isLoading) {\n    return _jsx(SafeAreaView, {\n      style: styles.root,\n      children: _jsx(View, {\n        children: _jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Loading...\"\n        })\n      })\n    });\n  } else {\n    return _jsxs(SafeAreaView, {\n      style: styles.root,\n      children: [_jsx(View, {\n        style: styles.header,\n        children: _jsx(View, {\n          style: styles.titleContainer,\n          children: _jsx(Text, {\n            style: styles.sectionTitle,\n            children: \"Drafts\"\n          })\n        })\n      }), _jsx(Text, {\n        style: styles.text,\n        children: errorMess\n      }), _jsxs(View, {\n        style: styles.body,\n        children: [_jsxs(View, {\n          children: [_jsx(CalendarPicker, {\n            startFromMonday: true,\n            minDate: new Date(2018, 1, 1),\n            maxDate: new Date(2050, 6, 3),\n            weekdays: ['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun'],\n            months: ['January', 'Febraury', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n            previousTitle: \"Previous\",\n            nextTitle: \"Next\",\n            todayBackgroundColor: \"#45ded0\",\n            selectedDayColor: \"#28a3a5\",\n            selectedDayTextColor: \"#000000\",\n            scaleFactor: 375,\n            textStyle: {\n              color: '#000000'\n            },\n            onDateChange: onDateChange\n          }), _jsx(Text, {\n            style: styles.text,\n            children: \"Selected Date :\"\n          }), _jsx(Text, {\n            style: styles.text,\n            children: selectedStartDate ? selectedStartDate.toString() : ''\n          })]\n        }), _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(CustomButtonSmall, {\n            text: \"Schedule Post\"\n          })\n        }), _jsx(View, {\n          style: styles.postContainer,\n          children: _jsx(Text, {\n            style: styles.post,\n            children: post\n          })\n        }), _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(CustomInput, {\n            placeholder: \"Edit your Draft here...\",\n            value: post,\n            setValue: setPost\n          }), _jsx(CustomButton, {\n            text: \"Save Edited Draft\",\n            onPress: function onPress() {\n              return saveDraft(post);\n            }\n          }), _jsx(CustomButtonSmall, {\n            text: \"Delete Draft\",\n            onPress: function onPress() {\n              return deleteDraft();\n            }\n          }), _jsx(CustomButtonSmall, {\n            text: \"Post Draft\",\n            onPress: function onPress() {\n              return postDraft(post);\n            }\n          })]\n        })]\n      })]\n    });\n  }\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: '#ffcfe6'\n  },\n  header: {\n    backgroundColor: \"#45ded0\",\n    height: 200,\n    padding: 10\n  },\n  body: {\n    marginTop: 40,\n    padding: 20\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 30\n  },\n  buttonContainer: {\n    alignItems: 'center',\n    padding: 10\n  },\n  titleContainer: {\n    paddingTop: 80,\n    paddingHorizontal: 40,\n    padding: 30,\n    alignSelf: 'center'\n  },\n  sectionTitle: {\n    fontSize: 28,\n    color: \"#696969\",\n    fontWeight: \"600\",\n    alignItems: 'center'\n  },\n  postContainer: {\n    justifyContent: 'space-between',\n    alignSelf: 'center',\n    alignContent: 'center',\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderColor: '#45ded0',\n    borderWidth: 1\n  },\n  text: {\n    fontSize: 16,\n    color: \"#696969\",\n    fontWeight: 'bold',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    alignSelf: 'center'\n  },\n  post: {\n    fontSize: 16,\n    color: \"#696969\",\n    fontWeight: 'bold',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 10\n  }\n});\nexport default Drafts;","map":{"version":3,"sources":["F:/Year 3/Mobile App Dev/MADAssignment/master/screens/Drafts/Drafts.js"],"names":["React","useState","useEffect","AsyncStorage","CustomInput","CustomButton","CustomButtonSmall","CalendarPicker","Drafts","navigation","post","setPost","isLoading","setIsLoading","errorMess","setErrorMess","selectedStartDate","setSelectedStartDate","addListener","refreshPage","checkLoggedIn","viewDraft","onDateChange","type","date","getItem","draft","saveDraft","textInput","setItem","postDraft","value","userID","fetch","method","headers","body","JSON","stringify","then","response","status","json","navigate","console","log","responseJson","catch","error","deleteDraft","removeItem","styles","root","sectionTitle","header","titleContainer","text","Date","color","toString","buttonContainer","postContainer","container","StyleSheet","create","flex","backgroundColor","height","padding","marginTop","alignItems","justifyContent","paddingTop","paddingHorizontal","alignSelf","fontSize","fontWeight","alignContent","width","borderColor","borderWidth","paddingVertical"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, TextInput, SafeAreaView} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport CustomInput from '../../components/customInput';\r\nimport CustomButton from '../../components/customButton';\r\nimport CustomButtonSmall from '../../components/customButtonSmall';\r\nimport CalendarPicker from 'react-native-calendar-picker';\r\n\r\nconst Drafts = ({ navigation }) => {\r\n    const [post, setPost] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [errorMess, setErrorMess] = useState('');\r\n    const [selectedStartDate, setSelectedStartDate] = useState(null);\r\n\r\n    useEffect(() => {\r\n        navigation.addListener('focus', () => {\r\n            refreshPage();\r\n        })\r\n        checkLoggedIn();\r\n        viewDraft();\r\n    }, [])\r\n\r\n    const refreshPage = () => {\r\n        checkLoggedIn();\r\n        viewDraft();\r\n    }\r\n\r\n    const onDateChange = (type, date) => {\r\n        setSelectedStartDate(date);\r\n    }\r\n\r\n    const viewDraft = async () => {\r\n        //get from async storage\r\n        let draft = await AsyncStorage.getItem('@session_draft');\r\n        setPost(draft);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const saveDraft = async (textInput) => {\r\n        await AsyncStorage.setItem('@session_draft', textInput);\r\n        setErrorMess(\"Draft Saved.\");\r\n    }\r\n\r\n    const postDraft = async (textInput) => {\r\n        const value = await AsyncStorage.getItem(\"@session_token\");\r\n        const userID = await AsyncStorage.getItem(\"@user_id\")\r\n        if (textInput != ''){\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post\", {\r\n            method: 'POST',\r\n            headers: {\r\n                \"X-Authorization\": value,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"text\": textInput,\r\n            })\r\n        }).then((response) => {\r\n            if (response.status === 200 || response.status === 201) {\r\n                return response.json()\r\n            } else if (response.status === 401) {\r\n                navigation.navigate(\"Login\");\r\n            } else {\r\n                console.log(response.status);\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            setErrorMess('Draft Posted.')\r\n            //console.log(responseJson);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n        } else {\r\n            setErrorMess('Please write at least 1 character before posting.');\r\n        }\r\n    }\r\n\r\n    const deleteDraft = async () => {\r\n        //remove from async storage\r\n        await AsyncStorage.removeItem('@session_draft');\r\n        setErrorMess('Draft Deleted.');\r\n    }\r\n\r\n    //const scheduleDraft = async () => {\r\n    //open calandar picker, input date \r\n    //schedules posting for inputted date\r\n    //}\r\n    \r\n    const checkLoggedIn = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        if (value == null) {\r\n            navigation.navigate('Login');\r\n        }\r\n    };\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <SafeAreaView style={styles.root}>\r\n                <View><Text style={styles.sectionTitle}>Loading...</Text></View>\r\n            </SafeAreaView>\r\n        );\r\n    } else {\r\n        return (\r\n            <SafeAreaView style={styles.root}>\r\n                <View style={styles.header}>\r\n                    {/*Drafts Page*/}\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={styles.sectionTitle}>Drafts</Text>\r\n                    </View>\r\n                </View>\r\n                <Text style={styles.text}>{errorMess}</Text>\r\n                <View style={styles.body}>\r\n                <View>\r\n                     <CalendarPicker\r\n                         startFromMonday={true}\r\n                         minDate={new Date(2018, 1, 1)}\r\n                         maxDate={new Date(2050, 6, 3)}\r\n                         weekdays={['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']}\r\n                         months={['January', 'Febraury', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December',]}\r\n                         previousTitle=\"Previous\"\r\n                         nextTitle=\"Next\"\r\n                         todayBackgroundColor=\"#45ded0\"\r\n                         selectedDayColor=\"#28a3a5\"\r\n                         selectedDayTextColor=\"#000000\"\r\n                         scaleFactor={375}\r\n                         textStyle={{\r\n                             color: '#000000',\r\n                         }}\r\n                         onDateChange={onDateChange}\r\n                     />\r\n                     <Text style={styles.text}>\r\n                         Selected Date :\r\n                     </Text>\r\n                     <Text style={styles.text}>\r\n                         {selectedStartDate ? selectedStartDate.toString() : ''}\r\n                     </Text>\r\n                    </View>\r\n                <View style={styles.buttonContainer}>\r\n                     <CustomButtonSmall text=\"Schedule Post\" />\r\n                </View>\r\n                {/*Draft displayed here*/}\r\n                <View style={styles.postContainer}>\r\n                    <Text style={styles.post}>{post}</Text>\r\n                </View>\r\n                <View style={styles.container}>\r\n                     {/*Text Input for Editing a Draft*/}\r\n                     <CustomInput placeholder=\"Edit your Draft here...\" value={post} setValue={setPost} />\r\n                     {/*Button to Post or Delete*/}\r\n                     <CustomButton text=\"Save Edited Draft\" onPress={() => saveDraft(post)} />\r\n                     <CustomButtonSmall text=\"Delete Draft\" onPress={() => deleteDraft()} />\r\n                     <CustomButtonSmall text=\"Post Draft\" onPress={() => postDraft(post)} />\r\n                    </View>\r\n                    </View>\r\n            </SafeAreaView>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#ffcfe6',\r\n\t},\r\n    header:{\r\n        backgroundColor: \"#45ded0\",\r\n        height: 200,\r\n        padding: 10,\r\n    },\r\n    body:{\r\n        marginTop: 40,\r\n        padding: 20,\r\n    },\r\n\tcontainer: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: 30,\r\n    },\r\n    buttonContainer: {\r\n        alignItems: 'center',\r\n        padding: 10,\r\n    },\r\n\ttitleContainer: {\r\n\t\tpaddingTop: 80,\r\n\t\tpaddingHorizontal: 40,\r\n        padding: 30,\r\n        alignSelf: 'center'\r\n\t},\r\n\tsectionTitle: {\r\n        fontSize:28,\r\n        color: \"#696969\",\r\n        fontWeight: \"600\",\r\n        alignItems: 'center',\r\n\t},\r\n    postContainer: {\r\n        justifyContent: 'space-between',\r\n        alignSelf: 'center',\r\n        alignContent: 'center',\r\n    \tbackgroundColor: '#ffffff',\r\n        width: '90%',\r\n\t\tborderColor: '#45ded0',\r\n        borderWidth: 1,\t\r\n    },\r\n    text: {\r\n        fontSize: 16,\r\n        color: \"#696969\",\r\n        fontWeight: 'bold',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 10,\r\n        alignSelf: 'center',\r\n    },\r\n    post: {\r\n        fontSize:16,\r\n        color: \"#696969\",\r\n        fontWeight: 'bold',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 10,\r\n    }\r\n});\r\n\r\nexport default Drafts;\r\n"]},"metadata":{},"sourceType":"module"}
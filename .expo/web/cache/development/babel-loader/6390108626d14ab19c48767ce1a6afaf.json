{"ast":null,"code":"import React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport \"react-native-gesture-handler\";\nimport Login from \"./screens/Login\";\nimport Signup from \"./screens/Signup\";\nimport Home from \"./screens/Home\";\nimport Profile from \"./screens/Profile\";\nimport Friends from \"./screens/Friends\";\nimport FriendRequests from \"./screens/FriendRequests\";\nimport Search from \"./screens/Search\";\nimport AccountSettings from \"./screens/AccountSettings\";\nimport Logout from \"./screens/Logout\";\nimport OtherProfile from \"./screens/OtherProfile\";\nimport EditPost from \"./screens/EditPost\";\nimport Drafts from \"./screens/Drafts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\n\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: TabHome,\n        options: {\n          header: function header(props) {\n            return null;\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Signup\",\n        component: Signup\n      }), _jsx(Stack.Screen, {\n        name: \"Friend Profile\",\n        component: OtherProfile\n      }), _jsx(Stack.Screen, {\n        name: \"Friends\",\n        component: Friends\n      }), _jsx(Stack.Screen, {\n        name: \"Edit Post\",\n        component: EditPost\n      }), _jsx(Stack.Screen, {\n        name: \"Drafts\",\n        component: Drafts\n      })]\n    })\n  });\n}\n\nfunction DrawerHome() {\n  return _jsxs(Drawer.Navigator, {\n    initialRouteName: \"Login\",\n    children: [_jsx(Drawer.Screen, {\n      name: \"Home\",\n      component: Home\n    }), _jsx(Drawer.Screen, {\n      name: \"Account Settings\",\n      component: AccountSettings\n    }), _jsx(Drawer.Screen, {\n      name: \"Logout\",\n      component: Logout\n    })]\n  });\n}\n\nfunction TabHome() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-planet' : 'ios-planet-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'ios-person' : 'ios-person-outline';\n          } else if (route.name === 'Search') {\n            iconName = focused ? 'ios-rocket' : 'ios-rocket-outline';\n          } else if (route.name === 'Friends') {\n            iconName = focused ? 'ios-people' : 'ios-people-outline';\n          } else if (route.name === 'Friend Requests') {\n            iconName = focused ? 'ios-person-add' : 'ios-person-add-outline';\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#45ded0',\n        tabBarInactiveTintColor: '#28a3a5'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: DrawerHome,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: Profile,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Search\",\n      component: Search,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Friends\",\n      component: Friends,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Friend Requests\",\n      component: FriendRequests,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Year 3/Mobile App Dev/MADAssignment/master/App.js"],"names":["React","Component","NavigationContainer","createBottomTabNavigator","createStackNavigator","createDrawerNavigator","Ionicons","Login","Signup","Home","Profile","Friends","FriendRequests","Search","AccountSettings","Logout","OtherProfile","EditPost","Drafts","Drawer","Tab","Stack","App","headerShown","TabHome","header","props","DrawerHome","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport \"react-native-gesture-handler\";\r\n\r\nimport Login from \"./screens/Login\";\r\nimport Signup from \"./screens/Signup\";\r\nimport Home from \"./screens/Home\";\r\nimport Profile from \"./screens/Profile\";\r\nimport Friends from \"./screens/Friends\";\r\nimport FriendRequests from \"./screens/FriendRequests\";\r\nimport Search from \"./screens/Search\";\r\nimport AccountSettings from \"./screens/AccountSettings\";\r\nimport Logout from \"./screens/Logout\";\r\nimport OtherProfile from \"./screens/OtherProfile\";\r\nimport EditPost from \"./screens/EditPost\";\r\nimport Drafts from \"./screens/Drafts\";\r\n\r\n//----------------------------------------------\r\n//App Main\r\n\r\nconst Drawer = createDrawerNavigator();\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n  \r\n\r\nfunction App(){\r\n    return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen\r\n          name=\"Login\" //make sure this is login unless testing\r\n          component={Login} //make sure this is login unless testing\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen name=\"Home\" component={TabHome} options={{header: (props) => null }}/>\r\n        <Stack.Screen name=\"Signup\" component={Signup} />\r\n        <Stack.Screen name=\"Friend Profile\" component={OtherProfile} />\r\n        <Stack.Screen name=\"Friends\" component={Friends} />\r\n        <Stack.Screen name=\"Edit Post\" component={EditPost} />\r\n        <Stack.Screen name=\"Drafts\" component={Drafts} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction DrawerHome() {\r\n    return (\r\n         <Drawer.Navigator initialRouteName=\"Login\">\r\n             <Drawer.Screen name=\"Home\" component={Home}  />\r\n             <Drawer.Screen name=\"Account Settings\" component={AccountSettings} />\r\n             <Drawer.Screen name=\"Logout\" component={Logout} /> \r\n         </Drawer.Navigator>\r\n    );\r\n}\r\n\r\nfunction TabHome() {\r\n    return ( \r\n         <Tab.Navigator //main page when logged in\r\n              screenOptions={({ route }) => ({\r\n                   tabBarIcon: ({ focused, color, size }) => {\r\n                        let iconName;\r\n\r\n                        if (route.name === 'Home') {\r\n                            iconName = focused\r\n                                ? 'ios-planet'\r\n                                : 'ios-planet-outline';\r\n                        } else if (route.name === 'Profile' ) {\r\n                            iconName = focused\r\n                                ? 'ios-person'\r\n                                : 'ios-person-outline';\r\n                        } else if (route.name === 'Search' ) {\r\n                            iconName = focused\r\n                                ? 'ios-rocket'\r\n                                : 'ios-rocket-outline';\r\n                        } else if (route.name === 'Friends' ) {\r\n                            iconName = focused\r\n                                ? 'ios-people'\r\n                                : 'ios-people-outline';\r\n                        } else if (route.name === 'Friend Requests' ) {\r\n                            iconName = focused\r\n                                ? 'ios-person-add'\r\n                                : 'ios-person-add-outline';\r\n                        }\r\n                        // You can return any component that you like here!\r\n                        return <Ionicons name={iconName} size={size} color={color} />;\r\n                   },\r\n                   tabBarActiveTintColor: '#45ded0',\r\n                   tabBarInactiveTintColor: '#28a3a5',\r\n              })}\r\n         >\r\n                <Tab.Screen name=\"Home\" component={DrawerHome} options={{ headerShown: false }} />\r\n                <Tab.Screen name=\"Profile\" component={Profile} options={{ headerShown: false }}/>\r\n                <Tab.Screen name=\"Search\" component={Search} options={{ headerShown: false }}/>\r\n                <Tab.Screen name=\"Friends\" component={Friends} options={{ headerShown: false }}/>\r\n                <Tab.Screen name=\"Friend Requests\" component={FriendRequests} options={{ headerShown: false }}/>\r\n         </Tab.Navigator>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}
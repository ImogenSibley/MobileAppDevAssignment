{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from 'react';\nimport Task from \"./components/Task\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskItems = _useState4[0],\n      setTaskItems = _useState4[1];\n\n  var handleAddTask = function handleAddTask() {\n    Keyboard.dismiss();\n    setTaskItems([].concat(_toConsumableArray(taskItems), [task]));\n    setTask(null);\n  };\n\n  var completeTask = function completeTask(index) {\n    var itemsCopy = _toConsumableArray(taskItems);\n\n    itemsCopy.splice(index, 1);\n    setTaskItems(itemsCopy);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.tasksWrapper,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Today's Tasks\"\n      }), _jsx(View, {\n        style: styles.items,\n        children: taskItems.map(function (item, index) {\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return completeTask(index);\n            },\n            children: _jsx(Task, {\n              text: item\n            })\n          }, index);\n        })\n      })]\n    }), _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: styles.writeTaskWrapper,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: 'Write a task',\n        value: task,\n        onChangeText: function onChangeText(text) {\n          return setTask(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleAddTask();\n        },\n        children: _jsx(View, {\n          style: styles.addWrapper,\n          children: _jsx(Text, {\n            style: styles.addText,\n            children: \"+\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ffcfe6'\n  },\n  tasksWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 40\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontFamily: 'helvetica',\n    fontWeight: 'bold'\n  },\n  items: {\n    marginTop: 30\n  },\n  addText: {},\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: '#fff',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#ffd500',\n    borderWidth: 1\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: '#fff',\n    borderRadius: 60,\n    borderColor: '#ffd500',\n    borderWidth: 1,\n    width: 250\n  },\n  writeTaskWrapper: {\n    position: 'absolute',\n    bottom: 60,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["F:/Year 3/Mobile App Dev/MADAssignment/master/App.js"],"names":["StatusBar","React","useState","Task","App","task","setTask","taskItems","setTaskItems","handleAddTask","Keyboard","dismiss","completeTask","index","itemsCopy","splice","styles","container","tasksWrapper","sectionTitle","items","map","item","Platform","OS","writeTaskWrapper","input","text","addWrapper","addText","StyleSheet","create","flex","backgroundColor","paddingTop","paddingHorizontal","fontSize","fontFamily","fontWeight","marginTop","width","height","borderRadius","justifyContent","alignItems","borderColor","borderWidth","paddingVertical","position","bottom","flexDirection"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { KeyboardAvoidingView, View, StyleSheet, Text, ScrollView, TextInput, Keyboard, Platform, TouchableOpacity } from 'react-native';\r\nimport React, { useState } from 'react';\r\nimport Task from './components/Task';\r\n\r\n//----------------------------------------------\r\n//TO DO LIST APP Hi\r\n\r\nexport default function App() {\r\n\tconst [task, setTask] = useState();\r\n\tconst [taskItems, setTaskItems] = useState([]);\r\n\t\t\r\n\tconst handleAddTask = () => {\r\n\t\tKeyboard.dismiss();\r\n\t\tsetTaskItems([...taskItems, task])\r\n\t\tsetTask(null);\r\n\t}\r\n\r\n\tconst completeTask = (index) => {\r\n\t\tlet itemsCopy = [...taskItems];\r\n\t\titemsCopy.splice(index, 1);\r\n\t\tsetTaskItems(itemsCopy)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<View style={styles.container}>\r\n\t\t{/*Today's Tasks*/}\r\n\t\t\t<View style={styles.tasksWrapper}>\r\n\t\t\t\t<Text style={styles.sectionTitle}>Today's Tasks</Text>\r\n\t\t\t\t<View style={styles.items}>\r\n\t\t\t\t\t{/*This is where the tasks will go!\r\n\t\t\t\t\t\t<Task text={'Task 1'} />\r\n\t\t\t\t\t\t<Task text={'Task 2'} />\r\n\t\t\t\t\t\t<Task text={'Task 3'} />\r\n\t\t\t\t\t\t<Task text={'Task 4'} />\r\n\t\t\t\t\t\t<Task text={'Task 5'} />\r\n\t\r\n\t\t\t\t\t*/}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttaskItems.map((item, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<TouchableOpacity key={index} onPress={() => completeTask(index)}>\r\n\t\t\t\t\t\t\t\t\t<Task text={item} />\r\n\t\t\t\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</View>\r\n\r\n\t\t\t</View>\r\n\r\n\t\t\t{/*Text Input for writing a task*/}\r\n\t\t\t<KeyboardAvoidingView\r\n\t\t\t\tbehavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n\t\t\t\tstyle={styles.writeTaskWrapper}\r\n\t\t\t>\r\n\t\t\t\t<TextInput style={styles.input} placeholder={'Write a task'} value={task} onChangeText={text => setTask(text)}/>\r\n\t\t\t\t<TouchableOpacity onPress={() => handleAddTask()}>\r\n\t\t\t\t\t<View style={styles.addWrapper}>\r\n\t\t\t\t\t\t<Text style={styles.addText}>+</Text>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t</KeyboardAvoidingView>\r\n\t\t\t\r\n\r\n\t\t</View>\r\n\r\n\t);\r\n}\r\n\r\n\tconst styles = StyleSheet.create({\r\n\t\tcontainer: {\r\n\t\t\tflex: 1,\r\n\t\t\tbackgroundColor: '#ffcfe6',\r\n\r\n\t\t},\r\n\t\ttasksWrapper: {\r\n\t\t\tpaddingTop: 80, \r\n\t\t\tpaddingHorizontal: 40,\r\n\t\t\t},\r\n\t\tsectionTitle: {\r\n\t\t\tfontSize: 24,\r\n\t\t\tfontFamily: 'helvetica',\r\n\t\t\tfontWeight: 'bold',\r\n\t\t\t},\r\n\t\titems: {\r\n\t\t\tmarginTop: 30,\r\n\t\t},\r\n\t\taddText: {},\r\n\t\taddWrapper: {\r\n\t\t\twidth: 60,\r\n\t\t\theight: 60,\r\n\t\t\tbackgroundColor: '#fff',\r\n\t\t\tborderRadius: 60,\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\talignItems: 'center',\r\n\t\t\tborderColor: '#ffd500',\r\n\t\t\tborderWidth: 1,\r\n\t\t},\r\n\t\tinput: {\r\n\t\t\tpaddingVertical: 15,\r\n\t\t\tpaddingHorizontal: 15,\r\n\t\t\tbackgroundColor: '#fff',\r\n\t\t\tborderRadius: 60,\r\n\t\t\tborderColor: '#ffd500',\r\n\t\t\tborderWidth: 1,\r\n\t\t\twidth: 250,\r\n\t\t},\r\n\t\twriteTaskWrapper: {\r\n\t\t\tposition: 'absolute',\r\n\t\t\tbottom: 60,\r\n\t\t\twidth: '100%',\r\n\t\t\tflexDirection: 'row',\r\n\t\t\tjustifyContent: 'space-around',\r\n\t\t\talignItems: 'center',\r\n\t\t},\r\n\t});\r\n\r\n"]},"metadata":{},"sourceType":"module"}
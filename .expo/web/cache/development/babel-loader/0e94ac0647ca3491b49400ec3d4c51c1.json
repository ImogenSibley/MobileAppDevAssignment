{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Friends = function Friends() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      friendList = _useState2[0],\n      setFriendList = _useState2[1];\n\n  var getFriendList = function getFriendList() {\n    var value, userID;\n    return _regeneratorRuntime.async(function getFriendList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n          case 5:\n            userID = _context.sent;\n            return _context.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/friends\", {\n              'headers': {\n                'X-Authorization': value\n              }\n            }).then(function (response) {\n              if (response.status === 200) {\n                return response.json();\n              } else if (response.status === 401) {\n                _this.props.navigation.navigate(\"Login\");\n              } else {\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              console.log(responseJson);\n              setFriendList(responseJson);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkLoggedIn = function checkLoggedIn() {\n    var value;\n    return _regeneratorRuntime.async(function checkLoggedIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context2.sent;\n\n            if (value == null) {\n              _this.props.navigation.navigate('Login');\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    checkLoggedIn();\n    getFriendList();\n  }, []);\n  return _jsx(SafeAreaView, {\n    style: styles.root,\n    children: _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(Text, {\n        children: \"Friends\"\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: '#ffcfe6'\n  }\n});\nexport default Friends;","map":{"version":3,"sources":["E:/Year 3/Mobile App Dev/MADAssignment/master/screens/Friends/Friends.js"],"names":["React","Friends","useState","friendList","setFriendList","getFriendList","AsyncStorage","getItem","value","userID","fetch","then","response","status","json","props","navigation","navigate","responseJson","console","log","catch","error","checkLoggedIn","useEffect","styles","root","flex","justifyContent","alignItems","StyleSheet","create","backgroundColor"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,kBAAoCC,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AAEH,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACCC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CADD;;AAAA;AACbC,YAAAA,KADa;AAAA;AAAA,6CAEMF,YAAY,CAACC,OAAb,CAAqB,UAArB,CAFN;;AAAA;AAETE,YAAAA,MAFS;AAAA,6CAGRC,KAAK,CAAC,0CAAwCD,MAAxC,GAA+C,UAAhD,EAA4D;AACpE,yBAAW;AACX,mCAAoBD;AADT;AADyD,aAA5D,CAAL,CAKNG,IALM,CAKD,UAACC,QAAD,EAAc;AAChB,kBAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACvB,uBAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,eAFD,MAEM,IAAGF,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AAC/B,gBAAA,KAAI,CAACE,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B;AACD,eAFK,MAED;AACD,sBAAM,sBAAN;AACH;AACJ,aAbM,EAaJN,IAbI,CAaC,UAACO,YAAD,EAAkB;AACtBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACAd,cAAAA,aAAa,CAACc,YAAD,CAAb;AACH,aAhBM,EAiBNG,KAjBM,CAiBA,UAACC,KAAD,EAAW;AACdH,cAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,aAnBM,CAHQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAyBG,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACFjB,YAAY,CAACC,OAAb,CAAqB,gBAArB,CADE;;AAAA;AAChBC,YAAAA,KADgB;;AAEtB,gBAAIA,KAAK,IAAI,IAAb,EAAmB;AACf,cAAA,KAAI,CAACO,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B;AACH;;AAJqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAOAO,EAAAA,SAAS,CAAC,YAAM;AACdD,IAAAA,aAAa;AACblB,IAAAA,aAAa;AACd,GAHQ,EAGN,EAHM,CAAT;AAKH,SACC,KAAC,YAAD;AAAc,IAAA,KAAK,EAAEoB,MAAM,CAACC,IAA5B;AAAA,cACC,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,cAAc,EAAE,QAA3B;AAAqCC,QAAAA,UAAU,EAAE;AAAjD,OAAb;AAAA,gBACC,KAAC,IAAD;AAAA;AAAA;AADD;AADD,IADD;AAOA,CA/CD;;AAiDA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAChCL,EAAAA,IAAI,EAAE;AACLC,IAAAA,IAAI,EAAE,CADD;AAELK,IAAAA,eAAe,EAAE;AAFZ;AAD0B,CAAlB,CAAf;AAQA,eAAe/B,OAAf","sourcesContent":["import React from 'react';\r\nimport { Text, View, SafeAreaView, StyleSheet } from 'react-native';\r\n\r\nconst Friends = () => {\r\n    const [friendList, setFriendList] = useState('');\r\n\r\n\tconst getFriendList = async () => {\r\n    const value = await AsyncStorage.getItem('@session_token');\r\n        const userID = await AsyncStorage.getItem('@user_id')\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\"+userID+\"/friends\", {\r\n            'headers': {\r\n            'X-Authorization':  value\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if(response.status === 200){\r\n                return response.json()\r\n            }else if(response.status === 401){\r\n              this.props.navigation.navigate(\"Login\");\r\n            }else{\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            console.log(responseJson);\r\n            setFriendList(responseJson);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n    \r\n    const checkLoggedIn = async () => {\r\n    const value = await AsyncStorage.getItem('@session_token');\r\n    if (value == null) {\r\n        this.props.navigation.navigate('Login');\r\n    }\r\n  };\r\n\r\n    useEffect(() => {\r\n      checkLoggedIn();\r\n      getFriendList();\r\n    }, []);\r\n\r\n\treturn (\r\n\t\t<SafeAreaView style={styles.root}>\r\n\t\t\t<View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n\t\t\t\t<Text>Friends</Text>\r\n\t\t\t</View>\r\n\t\t</SafeAreaView>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#ffcfe6',\r\n\t}\r\n\r\n});\r\n\r\nexport default Friends;"]},"metadata":{},"sourceType":"module"}
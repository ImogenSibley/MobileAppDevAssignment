{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar FriendRequests = function FriendRequests() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      FriendRequests = _useState2[0],\n      setFriendRequests = _useState2[1];\n\n  var getFriendRequests = function getFriendRequests() {\n    var value, userID;\n    return _regeneratorRuntime.async(function getFriendRequests$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n          case 5:\n            userID = _context.sent;\n            return _context.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/friendrequests\", {\n              'headers': {\n                'X-Authorization': value\n              }\n            }).then(function (response) {\n              if (response.status === 200) {\n                return response.json();\n              } else if (response.status === 401) {\n                _this.props.navigation.navigate(\"Login\");\n              } else {\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              console.log(responseJson);\n              setFriendRequests(responseJson);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkLoggedIn = function checkLoggedIn() {\n    var value;\n    return _regeneratorRuntime.async(function checkLoggedIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context2.sent;\n\n            if (value == null) {\n              _this.props.navigation.navigate('Login');\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var ItemView = function ItemView(_ref) {\n    var item = _ref.item;\n    return _jsx(View, {\n      children: _jsxs(Text, {\n        style: styles.text,\n        children: [item.id, item.user_givenname, ' ', item.user_familyname]\n      })\n    });\n  };\n\n  var ItemSeperatorView = function ItemSeperatorView() {\n    return _jsx(View, {\n      style: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: 'white'\n      }\n    });\n  };\n\n  useEffect(function () {\n    checkLoggedIn();\n    getFriendList();\n  }, []);\n  return _jsx(SafeAreaView, {\n    style: styles.root,\n    children: _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(Text, {\n        children: \"Friend Requests\"\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: '#ffcfe6'\n  }\n});\nexport default FriendRequests;","map":{"version":3,"sources":["E:/Year 3/Mobile App Dev/MADAssignment/master/screens/FriendRequests/FriendRequests.js"],"names":["React","useState","useEffect","AsyncStorage","FriendRequests","setFriendRequests","getFriendRequests","getItem","value","userID","fetch","then","response","status","json","props","navigation","navigate","responseJson","console","log","catch","error","checkLoggedIn","ItemView","item","styles","text","id","user_givenname","user_familyname","ItemSeperatorView","height","width","backgroundColor","getFriendList","root","flex","justifyContent","alignItems","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { View, Text, StyleSheet, TextInput, Image, SafeAreaView, FlatList, ScrollView} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst FriendRequests = () => {\r\n\tconst [FriendRequests, setFriendRequests] = useState('');\r\n\r\n\tconst getFriendRequests = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        const userID = await AsyncStorage.getItem('@user_id')\r\n        return fetch(\"http://localhost:3333/api/1.0.0/friendrequests\", {\r\n            'headers': {\r\n            'X-Authorization':  value\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if(response.status === 200){\r\n                return response.json()\r\n            }else if(response.status === 401){\r\n              this.props.navigation.navigate(\"Login\");\r\n            }else{\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            console.log(responseJson);\r\n            setFriendRequests(responseJson);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n    \r\n    const checkLoggedIn = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        if (value == null) {\r\n            this.props.navigation.navigate('Login');\r\n        }\r\n    };\r\n\r\n    const ItemView = ({item}) => {\r\n        return (\r\n            <View>\r\n                <Text style={styles.text}>\r\n                {item.id}{item.user_givenname}{' '}{item.user_familyname}\r\n                </Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n  const ItemSeperatorView = () => {\r\n    return (\r\n        <View \r\n            style={{height: 0.5, width: '100%', backgroundColor: 'white'}}\r\n        />\r\n    );\r\n  }\r\n\r\n\r\n    useEffect(() => {\r\n      checkLoggedIn();\r\n      getFriendList();\r\n    }, []);\r\n\treturn (\r\n\t\t<SafeAreaView style={styles.root}>\r\n\t\t\t<View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n\t\t\t\t<Text>Friend Requests</Text>\r\n\t\t\t</View>\r\n\t\t</SafeAreaView>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#ffcfe6',\r\n\t}\r\n\r\n});\r\n\r\nexport default FriendRequests;"]},"metadata":{},"sourceType":"module"}
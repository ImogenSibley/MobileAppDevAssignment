{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport CustomInput from \"../../components/customInput\";\nimport CustomButton from \"../../components/customButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login(_ref) {\n  var navigation, _useState, _useState2, email, setEmail, _useState3, _useState4, password, setPassword, _useState5, _useState6, errorMess, setErrorMess, onLoginPressed, onSignUpPressed;\n\n  return _regeneratorRuntime.async(function Login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          navigation = _ref.navigation;\n          _useState = useState(''), _useState2 = _slicedToArray(_useState, 2), email = _useState2[0], setEmail = _useState2[1];\n          _useState3 = useState(''), _useState4 = _slicedToArray(_useState3, 2), password = _useState4[0], setPassword = _useState4[1];\n          _useState5 = useState(''), _useState6 = _slicedToArray(_useState5, 2), errorMess = _useState6[0], setErrorMess = _useState6[1];\n\n          onLoginPressed = function onLoginPressed() {\n            return fetch(\"http://localhost:3333/api/1.0.0/login\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"email\": email,\n                \"password\": password\n              })\n            }).then(function (response) {\n              if (response.status === 201 || response.status === 200) {\n                console.log(\"fetch successful!\");\n                return response.json();\n              } else if (response.status === 400) {\n                setErrorMess(\"This user does not exist.\");\n                throw \"Bad data - Non existant user?\";\n              } else {\n                throw \"Something went wrong: \" + response.status;\n              }\n            }).then(function (responseData) {\n              console.log(JSON.stringify(responseData));\n            }).then(function (responseJson) {\n              navigation.navigate(\"Home\");\n            }).catch(function (err) {\n              console.log(err);\n            });\n          };\n\n          onSignUpPressed = function onSignUpPressed() {\n            console.warn(\"Sign Up!\");\n            navigation.navigate(\"Signup\");\n          };\n\n          return _context.abrupt(\"return\", _jsx(SafeAreaView, {\n            style: styles.root,\n            children: _jsxs(View, {\n              style: styles.container,\n              children: [_jsx(View, {\n                style: styles.titleContainer,\n                children: _jsx(Text, {\n                  style: styles.sectionTitle,\n                  children: \"Login\"\n                })\n              }), _jsx(Text, {\n                children: errorMess\n              }), _jsx(CustomInput, {\n                placeholder: \"Email\",\n                value: email,\n                setValue: setEmail\n              }), _jsx(CustomInput, {\n                secureTextEntry: true,\n                placeholder: \"Password\",\n                value: password,\n                setValue: setPassword\n              }), _jsx(CustomButton, {\n                text: \"Login\",\n                onPress: onLoginPressed\n              }), _jsx(CustomButton, {\n                text: \"Create an Account\",\n                onPress: onSignUpPressed\n              })]\n            })\n          }));\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: '#ffcfe6'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    padding: 10\n  },\n  titleContainer: {\n    paddingTop: 80,\n    paddingHorizontal: 40\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontFamily: 'helvetica'\n  }\n});\nexport default Login;","map":{"version":3,"sources":["E:/Year 3/Mobile App Dev/MADAssignment/master/screens/Login/Login.js"],"names":["React","useState","AsyncStorage","CustomInput","CustomButton","Login","navigation","email","setEmail","password","setPassword","errorMess","setErrorMess","onLoginPressed","fetch","method","headers","body","JSON","stringify","then","response","status","console","log","json","responseData","responseJson","navigate","catch","err","onSignUpPressed","warn","styles","root","container","titleContainer","sectionTitle","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","padding","paddingTop","paddingHorizontal","fontSize","fontFamily"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { View, Text, StyleSheet, TextInput, Image, SafeAreaView } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport CustomInput from '../../components/customInput';\r\nimport CustomButton from '../../components/customButton';\r\n//----------------------------------------------\r\n//Login Screen\r\n\r\nconst Login = async ({ navigation }) => {\r\n\t\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [errorMess, setErrorMess] = useState('');\r\n\r\n\tconst onLoginPressed = () => {\r\n\t\t//GET login details from server\r\n\t\treturn fetch(\"http://localhost:3333/api/1.0.0/login\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"email\": email,\r\n\t\t\t\t\"password\": password\r\n\t\t\t})\r\n\t\t}).then((response) => {\r\n\t\t\tif (response.status === 201 || response.status === 200 ) {\r\n\t\t\t\tconsole.log(\"fetch successful!\")\r\n\t\t\t\treturn response.json();\r\n\t\t\t} else if (response.status === 400) {\r\n\t\t\t\tsetErrorMess(\"This user does not exist.\");\r\n\t\t\t\tthrow \"Bad data - Non existant user?\"\r\n\t\t\t} else {\r\n\t\t\t\tthrow \"Something went wrong: \" + response.status\r\n\t\t\t}\r\n\t\t}).then((responseData) => {\r\n\t\t//store the id and token here using async storage\r\n\t\t\tconsole.log(JSON.stringify(responseData)) // DONT FORGET TO REMOVE AFTER!!\r\n\t\t\t//storeData(responseData);\r\n\t\t\t//getData(responseData);\r\n\t\t}).then((responseJson) => {\r\n\t\t\tnavigation.navigate(\"Home\");\r\n\t\t}).catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t})\r\n\r\n\t}\r\n\t\t//if authentic user \r\n\t\t//navigation.navigate(\"Home\");\r\n\r\n\tconst onSignUpPressed = () => {\r\n\t\tconsole.warn(\"Sign Up!\");\r\n\t\tnavigation.navigate(\"Signup\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<SafeAreaView style={styles.root}>\r\n\t\t\t<View style={styles.container}>\r\n\t\t\t{/*Spacebook Logo*/}\r\n\t\t\t{/*Login Title*/}\r\n\t\t\t<View style={styles.titleContainer}>\r\n\t\t\t\t<Text style={styles.sectionTitle}>Login</Text>\r\n\t\t\t</View>\r\n\r\n\t\t\t<Text>{errorMess}</Text>\r\n\r\n\t\t\t{/*Text Input for logging in*/}\r\n\t\t\t<CustomInput placeholder=\"Email\" value={email} setValue={setEmail} />\r\n\t\t\t<CustomInput secureTextEntry={true} placeholder=\"Password\" value={password} setValue={setPassword} />\r\n\r\n\t\t\t{/*Button to Click Login*/}\r\n\t\t\t<CustomButton text=\"Login\" onPress={onLoginPressed} />\r\n\r\n\t\t\t{/*Button to Sign Up*/}\r\n\t\t\t<CustomButton text=\"Create an Account\" onPress={onSignUpPressed} />\r\n\t\t\t</View>\r\n\t\t</SafeAreaView>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#ffcfe6',\r\n\t},\r\n\t//logo: {\r\n\t//\twidth: 120,\r\n\t//\theight: 120,\r\n\t//},\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tjustifyContent: 'space-evenly',\r\n\t\talignItems: 'center',\r\n\t\tpadding: 10\r\n\t},\r\n\ttitleContainer: {\r\n\t\tpaddingTop: 80,\r\n\t\tpaddingHorizontal: 40,\r\n\t},\r\n\tsectionTitle: {\r\n\t\tfontSize: 24,\r\n\t\tfontFamily: 'helvetica',\r\n\t}\r\n});\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}
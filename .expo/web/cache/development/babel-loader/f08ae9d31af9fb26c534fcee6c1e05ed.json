{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport CustomButton from \"../../components/customButton\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar OtherProfile = function OtherProfile(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstName = _useState4[0],\n      setFirstName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastName = _useState6[0],\n      setLastName = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      numOfFriends = _useState8[0],\n      setNumOfFriends = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      posts = _useState10[0],\n      setPosts = _useState10[1];\n\n  var getUserData = function getUserData() {\n    var requestedUserID, value;\n    return _regeneratorRuntime.async(function getUserData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            requestedUserID = route.params.requestedUserID;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 3:\n            value = _context2.sent;\n            return _context2.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + requestedUserID, {\n              'headers': {\n                'X-Authorization': value\n              }\n            }).then(function (response) {\n              if (response.status === 200) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                throw 'Something went wrong';\n              }\n            }).then(function _callee(responseJson) {\n              var first, last, emailAddress, friendCount;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      first = responseJson.first_name;\n                      setFirstName(first);\n                      last = responseJson.last_name;\n                      setLastName(last);\n                      emailAddress = responseJson.email;\n                      setEmail(emailAddress);\n                      friendCount = responseJson.friend_count;\n                      setNumOfFriends(friendCount);\n\n                    case 8:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkLoggedIn = function checkLoggedIn() {\n    var value;\n    return _regeneratorRuntime.async(function checkLoggedIn$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context3.sent;\n\n            if (value == null) {\n              navigation.navigate('Login');\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    checkLoggedIn();\n    getUserData();\n  }, []);\n  return _jsxs(SafeAreaView, {\n    style: styles.root,\n    children: [_jsx(View, {\n      style: styles.header\n    }), _jsx(Image, {\n      style: styles.avatar,\n      source: {\n        uri: 'https://miro.medium.com/max/3150/1*I8orYDhyFrbI-p21DstL6A.jpeg'\n      }\n    }), _jsx(View, {\n      style: styles.body,\n      children: _jsxs(View, {\n        style: styles.bodyContent,\n        children: [_jsxs(Text, {\n          style: styles.name,\n          children: [firstName, \" \", lastName]\n        }), _jsx(Text, {\n          style: styles.info,\n          children: email\n        }), _jsxs(Text, {\n          style: styles.info,\n          children: [\"Following: \", numOfFriends]\n        }), _jsx(CustomButton, {\n          text: \"Friends\"\n        })]\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: '#ffcfe6'\n  },\n  header: {\n    backgroundColor: \"#45ded0\",\n    height: 200\n  },\n  avatar: {\n    width: 130,\n    height: 130,\n    borderRadius: 63,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10,\n    alignSelf: 'center',\n    position: 'absolute',\n    marginTop: 130\n  },\n  body: {\n    marginTop: 40\n  },\n  bodyContent: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 30\n  },\n  name: {\n    fontSize: 28,\n    color: \"#696969\",\n    fontWeight: \"600\"\n  },\n  info: {\n    fontSize: 16,\n    color: \"#696969\",\n    marginTop: 10\n  }\n});\nexport default OtherProfile;","map":{"version":3,"sources":["F:/Year 3/Mobile App Dev/MADAssignment/master/screens/OtherProfile/OtherProfile.js"],"names":["React","useState","useEffect","CustomButton","AsyncStorage","OtherProfile","route","navigation","email","setEmail","firstName","setFirstName","lastName","setLastName","numOfFriends","setNumOfFriends","posts","setPosts","getUserData","requestedUserID","params","getItem","value","fetch","then","response","status","json","navigate","responseJson","first","first_name","last","last_name","emailAddress","friendCount","friend_count","catch","error","console","log","checkLoggedIn","styles","root","header","avatar","uri","body","bodyContent","name","info","StyleSheet","create","flex","backgroundColor","height","width","borderRadius","borderWidth","borderColor","marginBottom","alignSelf","position","marginTop","alignItems","padding","fontSize","color","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Text, View, SafeAreaView, StyleSheet, Image, TouchableOpacity } from 'react-native';\r\nimport CustomButton from '../../components/customButton'; \r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst OtherProfile = ({route, navigation}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [numOfFriends, setNumOfFriends] = useState('');\r\n    const [posts, setPosts] = useState('');\r\n\r\n    const getUserData = async () => {\r\n        let requestedUserID = route.params.requestedUserID;\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\"+requestedUserID, {\r\n            'headers': {\r\n            'X-Authorization':  value\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if(response.status === 200){\r\n                return response.json()\r\n            }else if(response.status === 401){\r\n              navigation.navigate(\"Login\");\r\n            }else{\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then(async (responseJson) => {\r\n            let first = responseJson.first_name;\r\n            setFirstName(first);\r\n            let last = responseJson.last_name;\r\n            setLastName(last);\r\n            let emailAddress = responseJson.email;\r\n            setEmail(emailAddress);\r\n            let friendCount = responseJson.friend_count;\r\n            setNumOfFriends(friendCount);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n    \r\n    const checkLoggedIn = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        if (value == null) {\r\n            navigation.navigate('Login');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        checkLoggedIn();\r\n        getUserData();\r\n    }, [])\r\n\r\n\treturn (\r\n        \r\n\t\t<SafeAreaView style={styles.root}>\r\n            <View style={styles.header}></View>\r\n            <Image style={styles.avatar} source={{uri: 'https://miro.medium.com/max/3150/1*I8orYDhyFrbI-p21DstL6A.jpeg'}}/>\r\n                <View style={styles.body}>\r\n                    <View style={styles.bodyContent}>\r\n                        <Text style={styles.name}>{firstName} {lastName}</Text>\r\n                        <Text style={styles.info}>{email}</Text>\r\n                        <Text style={styles.info}>Following: {numOfFriends}</Text>\r\n                        {/*If not already friends, show button to add user as friend*/}\r\n\t\t\t            <CustomButton text=\"Friends\"/>\r\n                        \r\n\r\n                    </View>\r\n                </View>\r\n\t\t</SafeAreaView>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#ffcfe6',\r\n\t},\r\n    header:{\r\n        backgroundColor: \"#45ded0\",\r\n        height:200,\r\n    },\r\n    avatar: {\r\n        width: 130,\r\n        height: 130,\r\n        borderRadius: 63,\r\n        borderWidth: 4,\r\n        borderColor: \"white\",\r\n        marginBottom:10,\r\n        alignSelf:'center',\r\n        position: 'absolute',\r\n        marginTop:130\r\n    },\r\n    body:{\r\n        marginTop:40,\r\n    },\r\n    bodyContent: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        padding:30,\r\n    },\r\n    name:{\r\n        fontSize:28,\r\n        color: \"#696969\",\r\n        fontWeight: \"600\"\r\n    },\r\n    info:{\r\n        fontSize:16,\r\n        color: \"#696969\",\r\n        marginTop:10\r\n    },\r\n});\r\n\r\nexport default OtherProfile;\r\n"]},"metadata":{},"sourceType":"module"}
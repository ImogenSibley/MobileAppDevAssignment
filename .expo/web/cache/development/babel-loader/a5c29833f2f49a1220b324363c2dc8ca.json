{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport CustomInput from \"../../components/customInput\";\nimport CustomButton from \"../../components/customButton\";\nimport CustomButtonSmall from \"../../components/customButtonSmall\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      posts = _useState4[0],\n      setPosts = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newPost = _useState6[0],\n      setNewPost = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setIsLoading = _useState8[1];\n\n  var getFirstName = function getFirstName() {\n    var value, userID;\n    return _regeneratorRuntime.async(function getFirstName$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n          case 5:\n            userID = _context.sent;\n            return _context.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID, {\n              'headers': {\n                'X-Authorization': value\n              }\n            }).then(function (response) {\n              if (response.status === 200) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              var first = responseJson.first_name;\n              setFirstName(first);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getAllPosts = function getAllPosts() {\n    var value, userID;\n    return _regeneratorRuntime.async(function getAllPosts$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n          case 5:\n            userID = _context2.sent;\n            return _context2.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post\", {\n              'headers': {\n                'X-Authorization': value\n              }\n            }).then(function (response) {\n              if (response.status === 200) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              setPosts(responseJson);\n              setIsLoading(false);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addNewPost = function addNewPost(textInput) {\n    var value, userID;\n    return _regeneratorRuntime.async(function addNewPost$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n          case 2:\n            value = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@user_id\"));\n\n          case 5:\n            userID = _context3.sent;\n            return _context3.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post\", {\n              method: 'POST',\n              headers: {\n                \"X-Authorization\": value,\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"text\": textInput\n              })\n            }).then(function (response) {\n              if (response.status === 200 || response.status === 201) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                console.log(response.status);\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              getAllPosts();\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var deletePost = function deletePost(postID) {\n    var value, userID;\n    return _regeneratorRuntime.async(function deletePost$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n          case 2:\n            value = _context4.sent;\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@user_id\"));\n\n          case 5:\n            userID = _context4.sent;\n            return _context4.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post/\" + postID, {\n              method: 'DELETE',\n              headers: {\n                \"X-Authorization\": value\n              }\n            }).then(function (response) {\n              if (response.status === 200 || response.status === 201) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                console.log(response.status);\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              console.log(response.status);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onEditPostPressed = function onEditPostPressed(postID) {\n    navigation.navigate(\"Edit Post\", {\n      postID: postID\n    });\n  };\n\n  var ItemView = function ItemView(_ref2) {\n    var item = _ref2.item;\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsxs(Text, {\n        style: styles.post,\n        children: [item.id, item.author.first_name, ' ', item.author.last_name, ' - ', item.text, ' ', item.timestamp, ' - Likes: ', item.numLikes, ' ', _jsx(CustomButtonSmall, {\n          text: \"Edit\",\n          onPress: function onPress() {\n            return onEditPostPressed(item.post_id);\n          }\n        }), ' ', _jsx(CustomButtonSmall, {\n          text: \"Delete\",\n          onPress: function onPress() {\n            return deletePost(item.post_id);\n          }\n        })]\n      })\n    });\n  };\n\n  var ItemSeperatorView = function ItemSeperatorView() {\n    return _jsx(View, {\n      style: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: 'white'\n      }\n    });\n  };\n\n  var checkLoggedIn = function checkLoggedIn() {\n    var value;\n    return _regeneratorRuntime.async(function checkLoggedIn$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context5.sent;\n\n            if (value == null) {\n              navigation.navigate('Login');\n            }\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    checkLoggedIn();\n    getFirstName();\n    getAllPosts();\n  }, []);\n\n  if (isLoading) {\n    return _jsx(SafeAreaView, {\n      style: styles.root,\n      children: _jsx(View, {\n        children: _jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Loading...\"\n        })\n      })\n    });\n  } else {\n    return _jsx(ScrollView, {\n      children: _jsxs(SafeAreaView, {\n        style: styles.root,\n        children: [_jsx(View, {\n          style: styles.header,\n          children: _jsx(View, {\n            style: styles.titleContainer,\n            children: _jsxs(Text, {\n              style: styles.sectionTitle,\n              children: [\"Welcome back \", firstName, \"!\"]\n            })\n          })\n        }), _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(CustomInput, {\n            placeholder: \"Write your post here...\",\n            value: newPost,\n            setValue: setNewPost\n          }), _jsx(CustomButton, {\n            text: \"Post\",\n            onPress: function onPress() {\n              return addNewPost(newPost);\n            }\n          })]\n        }), _jsx(View, {\n          style: styles.container,\n          children: _jsx(FlatList, {\n            data: posts,\n            keyExtractor: function keyExtractor(item, index) {\n              return index.toString();\n            },\n            ItemSeperatorComponent: ItemSeperatorView,\n            renderItem: ItemView\n          })\n        })]\n      })\n    });\n  }\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: '#ffcfe6'\n  },\n  header: {\n    backgroundColor: \"#45ded0\",\n    height: 200,\n    padding: 10\n  },\n  container: {\n    alignItems: 'center',\n    paddingTop: 20\n  },\n  titleContainer: {\n    paddingTop: 80,\n    paddingHorizontal: 40,\n    padding: 40,\n    alignSelf: 'center'\n  },\n  sectionTitle: {\n    fontSize: 28,\n    color: \"#696969\",\n    fontWeight: \"600\",\n    alignItems: 'center'\n  },\n  postContainer: {\n    justifyContent: 'space-between',\n    alignSelf: 'center',\n    alignContent: 'center',\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderColor: '#45ded0',\n    borderWidth: 1\n  },\n  post: {\n    fontSize: 16,\n    color: \"#696969\",\n    fontWeight: 'bold',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 10\n  }\n});\nexport default Home;","map":{"version":3,"sources":["E:/Year 3/Mobile App Dev/MADAssignment/master/screens/Home/Home.js"],"names":["React","useState","useEffect","AsyncStorage","CustomInput","CustomButton","CustomButtonSmall","Home","navigation","firstName","setFirstName","posts","setPosts","newPost","setNewPost","isLoading","setIsLoading","getFirstName","getItem","value","userID","fetch","then","response","status","json","navigate","responseJson","first","first_name","catch","error","console","log","getAllPosts","addNewPost","textInput","method","headers","body","JSON","stringify","deletePost","postID","onEditPostPressed","ItemView","item","styles","container","post","id","author","last_name","text","timestamp","numLikes","post_id","ItemSeperatorView","height","width","backgroundColor","checkLoggedIn","root","sectionTitle","header","titleContainer","index","toString","StyleSheet","create","flex","padding","alignItems","paddingTop","paddingHorizontal","alignSelf","fontSize","color","fontWeight","postContainer","justifyContent","alignContent","borderColor","borderWidth","paddingVertical"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, TextInput, Image, SafeAreaView, FlatList, ScrollView } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport CustomInput from '../../components/customInput';\r\nimport CustomButton from '../../components/customButton';\r\nimport CustomButtonSmall from '../../components/customButtonSmall';\r\n\r\nconst Home = ({ navigation }) => {\r\n\tconst [firstName, setFirstName] = useState('');\r\n    const [posts, setPosts] = useState('');\r\n    const [newPost, setNewPost] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n\tconst getFirstName = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        const userID = await AsyncStorage.getItem('@user_id')\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\"+userID, {\r\n            'headers': {\r\n            'X-Authorization':  value\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if(response.status === 200){\r\n                return response.json()\r\n            }else if(response.status === 401){\r\n              navigation.navigate(\"Login\");\r\n            }else{\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            //console.log(responseJson);\r\n            let first = responseJson.first_name; \r\n            setFirstName(first);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const getAllPosts = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        const userID = await AsyncStorage.getItem('@user_id')\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\"+userID+\"/post\", {\r\n            'headers': {\r\n            'X-Authorization':  value\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if(response.status === 200){\r\n                return response.json()\r\n            }else if(response.status === 401){\r\n              navigation.navigate(\"Login\");\r\n            }else{\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            //console.log(responseJson);\r\n            setPosts(responseJson);\r\n            setIsLoading(false);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const addNewPost = async (textInput) => {\r\n        const value = await AsyncStorage.getItem(\"@session_token\");\r\n        const userID = await AsyncStorage.getItem(\"@user_id\")\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post\", {\r\n            method: 'POST',\r\n            headers: {\r\n                \"X-Authorization\": value,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"text\": textInput,\r\n            })\r\n        }).then((response) => {\r\n            if (response.status === 200 || response.status === 201) {\r\n                return response.json()\r\n            } else if (response.status === 401) {\r\n                navigation.navigate(\"Login\");\r\n            } else {\r\n                console.log(response.status);\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            getAllPosts();\r\n            //console.log(responseJson);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const deletePost = async (postID) => {\r\n        const value = await AsyncStorage.getItem(\"@session_token\");\r\n        const userID = await AsyncStorage.getItem(\"@user_id\");\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post/\" + postID, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"X-Authorization\": value,\r\n            }\r\n        }).then((response) => {\r\n            if (response.status === 200 || response.status === 201) {\r\n                return response.json()\r\n            } else if (response.status === 401) {\r\n                navigation.navigate(\"Login\");\r\n            } else {\r\n                console.log(response.status);\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            console.log(response.status);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const onEditPostPressed = (postID) => {\r\n        //store this ID to fetch details of post ID from edit page\r\n\t\tnavigation.navigate(\"Edit Post\", {postID: postID});\r\n\t}\r\n\r\n    const ItemView = ({item}) => {\r\n        return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.post}>\r\n                {item.id}{item.author.first_name}{' '}{item.author.last_name}{' - '}{item.text}{' '}{item.timestamp}{' - Likes: '}{item.numLikes}\r\n                {' '}<CustomButtonSmall text=\"Edit\" onPress={() => onEditPostPressed(item.post_id)}/>{' '}<CustomButtonSmall text=\"Delete\" onPress={() => deletePost(item.post_id)}/>\r\n            </Text>\r\n        </View>\r\n        );\r\n    }\r\n\r\n  const ItemSeperatorView = () => {\r\n    return (\r\n        <View \r\n            style={{ height: 0.5, width: '100%', backgroundColor: 'white'}}\r\n        />\r\n    );\r\n  }\r\n    \r\n    const checkLoggedIn = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        if (value == null) {\r\n            navigation.navigate('Login');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        checkLoggedIn();\r\n        getFirstName();\r\n        getAllPosts();\r\n    }, [])\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <SafeAreaView style={styles.root}>\r\n                <View><Text style={styles.sectionTitle}>Loading...</Text></View>\r\n            </SafeAreaView>\r\n        );\r\n    } else {\r\n        return (\r\n        <ScrollView>\r\n            <SafeAreaView style={styles.root}>\r\n                <View style={styles.header}>\r\n                    {/*Spacebook Logo*/}\r\n                    {/*Homepage*/}\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={styles.sectionTitle}>Welcome back {firstName}!</Text>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.container}>\r\n                     {/*Text Input for Writing a Post*/}\r\n                     <CustomInput placeholder=\"Write your post here...\" value={newPost} setValue={setNewPost} />\r\n                     {/*Button to Post*/}\r\n                     <CustomButton text=\"Post\" onPress={() => addNewPost(newPost)} />\r\n                </View>\r\n                <View style={styles.container}>\r\n                     {/*Posts go here*/}\r\n                     <FlatList\r\n                         data={posts}\r\n                         keyExtractor={(item, index) => index.toString()}\r\n                         ItemSeperatorComponent={ItemSeperatorView}\r\n                         renderItem={ItemView}\r\n                     />\r\n                </View>\r\n            </SafeAreaView>\r\n        </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#ffcfe6',\r\n\t},\r\n    header:{\r\n        backgroundColor: \"#45ded0\",\r\n        height:200,\r\n        padding: 10,\r\n    },\r\n\tcontainer: {\r\n\t\talignItems: 'center',\r\n        paddingTop: 20,\r\n\t},\r\n\ttitleContainer: {\r\n\t\tpaddingTop: 80,\r\n\t\tpaddingHorizontal: 40,\r\n        padding: 40,\r\n        alignSelf: 'center'\r\n\t},\r\n\tsectionTitle: {\r\n        fontSize:28,\r\n        color: \"#696969\",\r\n        fontWeight: \"600\",\r\n        alignItems: 'center',\r\n\t},\r\n    postContainer: {\r\n        justifyContent: 'space-between',\r\n        alignSelf: 'center',\r\n        alignContent: 'center',\r\n    \tbackgroundColor: '#ffffff',\r\n        width: '90%',\r\n\t\tborderColor: '#45ded0',\r\n\t\tborderWidth: 1,\t\r\n    },\r\n    post: {\r\n        fontSize:16,\r\n        color: \"#696969\",\r\n        fontWeight: 'bold',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 10,\r\n    }\r\n});\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
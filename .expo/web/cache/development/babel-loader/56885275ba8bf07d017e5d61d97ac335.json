{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport CustomInput from \"../../components/customInput\";\nimport CustomButton from \"../../components/customButton\";\nimport CustomButtonSmall from \"../../components/customButtonSmall\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar EditPost = function EditPost(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      postContent = _useState2[0],\n      setPostContent = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postChanges = _useState4[0],\n      setPostChanges = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMess = _useState8[0],\n      setErrorMess = _useState8[1];\n\n  useEffect(function () {\n    navigation.addListener('focus', function () {\n      refreshPage();\n    });\n    checkLoggedIn();\n    viewPost();\n  }, []);\n\n  var refreshPage = function refreshPage() {\n    checkLoggedIn();\n    viewPost();\n  };\n\n  var viewPost = function viewPost() {\n    var postID, value, userID;\n    return _regeneratorRuntime.async(function viewPost$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            postID = route.params.postID;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n          case 3:\n            value = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@user_id\"));\n\n          case 6:\n            userID = _context.sent;\n            return _context.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post/\" + postID, {\n              headers: {\n                \"X-Authorization\": value\n              }\n            }).then(function (response) {\n              if (response.status === 200 || response.status === 201) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                console.log(response.status);\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              setIsLoading(false);\n              setPostContent(responseJson.text);\n              console.log(response.status);\n              console.log('Post Fetched.');\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var editPost = function editPost(textInput) {\n    var postID, value, userID;\n    return _regeneratorRuntime.async(function editPost$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            postID = route.params.postID;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n          case 3:\n            value = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@user_id\"));\n\n          case 6:\n            userID = _context2.sent;\n\n            if (!(textInput != '')) {\n              _context2.next = 11;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post/\" + postID, {\n              method: 'PATCH',\n              headers: {\n                \"X-Authorization\": value,\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"text\": textInput\n              })\n            }).then(function (response) {\n              if (response.status === 200 || response.status === 201) {\n                setErrorMess('Post Edited.');\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                console.log(response.status);\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              console.log('Post Edited.');\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 11:\n            setErrorMess('Please write at least 1 character before posting.');\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var deletePost = function deletePost() {\n    var postID, value, userID;\n    return _regeneratorRuntime.async(function deletePost$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            postID = route.params.postID;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n          case 3:\n            value = _context3.sent;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@user_id\"));\n\n          case 6:\n            userID = _context3.sent;\n            return _context3.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post/\" + postID, {\n              method: 'DELETE',\n              headers: {\n                \"X-Authorization\": value\n              }\n            }).then(function (response) {\n              if (response.status === 200 || response.status === 201) {\n                setErrorMess('Post Deleted.');\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                console.log(response.status);\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              console.log('Post Deleted.');\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkLoggedIn = function checkLoggedIn() {\n    var value;\n    return _regeneratorRuntime.async(function checkLoggedIn$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context4.sent;\n\n            if (value == null) {\n              navigation.navigate('Login');\n            }\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (isLoading) {\n    return _jsx(SafeAreaView, {\n      style: styles.root,\n      children: _jsx(View, {\n        children: _jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Loading...\"\n        })\n      })\n    });\n  } else {\n    return _jsxs(SafeAreaView, {\n      style: styles.root,\n      children: [_jsx(View, {\n        style: styles.header,\n        children: _jsx(View, {\n          style: styles.titleContainer,\n          children: _jsx(Text, {\n            style: styles.sectionTitle,\n            children: \"Edit Post\"\n          })\n        })\n      }), _jsx(Text, {\n        style: styles.text,\n        children: errorMess\n      }), _jsx(View, {\n        style: styles.postContainer,\n        children: _jsx(Text, {\n          style: styles.post,\n          children: postContent\n        })\n      }), _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(CustomInput, {\n          placeholder: \"Edit your post here...\",\n          value: postChanges,\n          setValue: setPostChanges\n        }), _jsx(CustomButton, {\n          text: \"Save Changes\",\n          onPress: function onPress() {\n            return editPost(postChanges);\n          }\n        }), _jsx(CustomButton, {\n          text: \"Delete\",\n          onPress: function onPress() {\n            return deletePost();\n          }\n        })]\n      })]\n    });\n  }\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: '#ffcfe6'\n  },\n  header: {\n    backgroundColor: \"#45ded0\",\n    height: 200,\n    padding: 10\n  },\n  body: {\n    marginTop: 40\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 30\n  },\n  titleContainer: {\n    paddingTop: 80,\n    paddingHorizontal: 40,\n    padding: 30,\n    alignSelf: 'center'\n  },\n  sectionTitle: {\n    fontSize: 28,\n    color: \"#696969\",\n    fontWeight: \"600\",\n    alignItems: 'center'\n  },\n  postContainer: {\n    justifyContent: 'space-between',\n    alignSelf: 'center',\n    alignContent: 'center',\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderColor: '#45ded0',\n    borderWidth: 1\n  },\n  post: {\n    fontSize: 16,\n    color: \"#696969\",\n    fontWeight: 'bold',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 10\n  }\n});\nexport default EditPost;","map":{"version":3,"sources":["F:/Year 3/Mobile App Dev/MADAssignment/master/screens/EditPost/EditPost.js"],"names":["React","useState","useEffect","AsyncStorage","CustomInput","CustomButton","CustomButtonSmall","EditPost","route","navigation","postContent","setPostContent","postChanges","setPostChanges","isLoading","setIsLoading","errorMess","setErrorMess","addListener","refreshPage","checkLoggedIn","viewPost","postID","params","getItem","value","userID","fetch","headers","then","response","status","json","navigate","console","log","responseJson","text","catch","error","editPost","textInput","method","body","JSON","stringify","deletePost","styles","root","sectionTitle","header","titleContainer","postContainer","post","container","StyleSheet","create","flex","backgroundColor","height","padding","marginTop","alignItems","paddingTop","paddingHorizontal","alignSelf","fontSize","color","fontWeight","justifyContent","alignContent","width","borderColor","borderWidth","paddingVertical"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,WAAP;AACA,OAAOC,YAAP;AACA,OAAOC,iBAAP;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA2B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACxC,kBAAsCR,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOS,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAsCV,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOW,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAkCZ,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOa,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAkCd,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOe,SAAP;AAAA,MAAkBC,YAAlB;;AAEAf,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,UAAU,CAACS,WAAX,CAAuB,OAAvB,EAAgC,YAAM;AAClCC,MAAAA,WAAW;AACd,KAFD;AAGAC,IAAAA,aAAa;AACbC,IAAAA,QAAQ;AACX,GANQ,EAMN,EANM,CAAT;;AAQA,MAAMF,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBC,IAAAA,aAAa;AACbC,IAAAA,QAAQ;AACX,GAHD;;AAKA,MAAMA,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,YAAAA,MADS,GACAd,KAAK,CAACe,MAAN,CAAaD,MADb;AAAA;AAAA,6CAEOnB,YAAY,CAACqB,OAAb,CAAqB,gBAArB,CAFP;;AAAA;AAEPC,YAAAA,KAFO;AAAA;AAAA,6CAGQtB,YAAY,CAACqB,OAAb,CAAqB,UAArB,CAHR;;AAAA;AAGPE,YAAAA,MAHO;AAAA,6CAINC,KAAK,CAAC,0CAA0CD,MAA1C,GAAmD,QAAnD,GAA6DJ,MAA9D,EAAsE;AAC9EM,cAAAA,OAAO,EAAE;AACL,mCAAmBH;AADd;AADqE,aAAtE,CAAL,CAIJI,IAJI,CAIC,UAACC,QAAD,EAAc;AAClB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BD,QAAQ,CAACC,MAAT,KAAoB,GAAnD,EAAwD;AACpD,uBAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,eAFD,MAEO,IAAIF,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAChCtB,gBAAAA,UAAU,CAACwB,QAAX,CAAoB,OAApB;AACH,eAFM,MAEA;AACHC,gBAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,MAArB;AACA,sBAAM,sBAAN;AACH;AACJ,aAbM,EAaJF,IAbI,CAaC,UAACO,YAAD,EAAkB;AACtBrB,cAAAA,YAAY,CAAC,KAAD,CAAZ;AACAJ,cAAAA,cAAc,CAACyB,YAAY,CAACC,IAAd,CAAd;AACAH,cAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,MAArB;AACAG,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,aAlBM,EAkBJG,KAlBI,CAkBE,UAACC,KAAD,EAAW;AAChBL,cAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,aApBM,CAJM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AA2BA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACTnB,YAAAA,MADS,GACAd,KAAK,CAACe,MAAN,CAAaD,MADb;AAAA;AAAA,6CAEOnB,YAAY,CAACqB,OAAb,CAAqB,gBAArB,CAFP;;AAAA;AAEPC,YAAAA,KAFO;AAAA;AAAA,6CAGQtB,YAAY,CAACqB,OAAb,CAAqB,UAArB,CAHR;;AAAA;AAGPE,YAAAA,MAHO;;AAAA,kBAITe,SAAS,IAAI,EAJJ;AAAA;AAAA;AAAA;;AAAA,8CAKNd,KAAK,CAAC,0CAA0CD,MAA1C,GAAmD,QAAnD,GAA8DJ,MAA/D,EAAuE;AAC/EoB,cAAAA,MAAM,EAAE,OADuE;AAE/Ed,cAAAA,OAAO,EAAE;AACL,mCAAmBH,KADd;AAEL,gCAAgB;AAFX,eAFsE;AAM/EkB,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,wBAAQJ;AADS,eAAf;AANyE,aAAvE,CAAL,CASJZ,IATI,CASC,UAACC,QAAD,EAAc;AAClB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BD,QAAQ,CAACC,MAAT,KAAoB,GAAnD,EAAwD;AACpDd,gBAAAA,YAAY,CAAC,cAAD,CAAZ;AACA,uBAAOa,QAAQ,CAACE,IAAT,EAAP;AACH,eAHD,MAGO,IAAIF,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAChCtB,gBAAAA,UAAU,CAACwB,QAAX,CAAoB,OAApB;AACH,eAFM,MAEA;AACHC,gBAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,MAArB;AACA,sBAAM,sBAAN;AACH;AACJ,aAnBM,EAmBJF,IAnBI,CAmBC,UAACO,YAAD,EAAkB;AACtBF,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,aArBM,EAqBJG,KArBI,CAqBE,UAACC,KAAD,EAAW;AAChBL,cAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,aAvBM,CALM;;AAAA;AA8BTtB,YAAAA,YAAY,CAAC,mDAAD,CAAZ;;AA9BS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAkCA,MAAM6B,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AACXxB,YAAAA,MADW,GACFd,KAAK,CAACe,MAAN,CAAaD,MADX;AAAA;AAAA,6CAEKnB,YAAY,CAACqB,OAAb,CAAqB,gBAArB,CAFL;;AAAA;AAETC,YAAAA,KAFS;AAAA;AAAA,6CAGMtB,YAAY,CAACqB,OAAb,CAAqB,UAArB,CAHN;;AAAA;AAGTE,YAAAA,MAHS;AAAA,8CAIRC,KAAK,CAAC,0CAA0CD,MAA1C,GAAmD,QAAnD,GAA8DJ,MAA/D,EAAuE;AAC/EoB,cAAAA,MAAM,EAAE,QADuE;AAE/Ed,cAAAA,OAAO,EAAE;AACL,mCAAmBH;AADd;AAFsE,aAAvE,CAAL,CAKJI,IALI,CAKC,UAACC,QAAD,EAAc;AAClB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BD,QAAQ,CAACC,MAAT,KAAoB,GAAnD,EAAwD;AACpDd,gBAAAA,YAAY,CAAC,eAAD,CAAZ;AACA,uBAAOa,QAAQ,CAACE,IAAT,EAAP;AACH,eAHD,MAGO,IAAIF,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAChCtB,gBAAAA,UAAU,CAACwB,QAAX,CAAoB,OAApB;AACH,eAFM,MAEA;AACHC,gBAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,MAArB;AACA,sBAAM,sBAAN;AACH;AACJ,aAfM,EAeJF,IAfI,CAeC,UAACO,YAAD,EAAkB;AACtBF,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,aAjBM,EAiBJG,KAjBI,CAiBE,UAACC,KAAD,EAAW;AAChBL,cAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,aAnBM,CAJQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AA0BA,MAAMnB,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEjB,YAAY,CAACqB,OAAb,CAAqB,gBAArB,CADF;;AAAA;AACZC,YAAAA,KADY;;AAElB,gBAAIA,KAAK,IAAI,IAAb,EAAmB;AACfhB,cAAAA,UAAU,CAACwB,QAAX,CAAoB,OAApB;AACH;;AAJiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAOA,MAAInB,SAAJ,EAAe;AACX,WACI,KAAC,YAAD;AAAc,MAAA,KAAK,EAAEiC,MAAM,CAACC,IAA5B;AAAA,gBACI,KAAC,IAAD;AAAA,kBAAM,KAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAN;AADJ,MADJ;AAKH,GAND,MAMO;AACH,WACI,MAAC,YAAD;AAAc,MAAA,KAAK,EAAEF,MAAM,CAACC,IAA5B;AAAA,iBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACG,MAApB;AAAA,kBAGI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACI,cAApB;AAAA,oBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEJ,MAAM,CAACE,YAApB;AAAA;AAAA;AADJ;AAHJ,QADJ,EAQI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACV,IAApB;AAAA,kBAA2BrB;AAA3B,QARJ,EAUI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE+B,MAAM,CAACK,aAApB;AAAA,kBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEL,MAAM,CAACM,IAApB;AAAA,oBAA2B3C;AAA3B;AADJ,QAVJ,EAaI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEqC,MAAM,CAACO,SAApB;AAAA,mBAEK,KAAC,WAAD;AAAa,UAAA,WAAW,EAAC,wBAAzB;AAAkD,UAAA,KAAK,EAAE1C,WAAzD;AAAsE,UAAA,QAAQ,EAAEC;AAAhF,UAFL,EAIK,KAAC,YAAD;AAAc,UAAA,IAAI,EAAC,cAAnB;AAAkC,UAAA,OAAO,EAAE;AAAA,mBAAM2B,QAAQ,CAAC5B,WAAD,CAAd;AAAA;AAA3C,UAJL,EAKK,KAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAE;AAAA,mBAAMkC,UAAU,EAAhB;AAAA;AAArC,UALL;AAAA,QAbJ;AAAA,MADJ;AAuBH;AACJ,CAhJD;;AAkJA,IAAMC,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAChCR,EAAAA,IAAI,EAAE;AACLS,IAAAA,IAAI,EAAE,CADD;AAELC,IAAAA,eAAe,EAAE;AAFZ,GAD0B;AAK7BR,EAAAA,MAAM,EAAC;AACHQ,IAAAA,eAAe,EAAE,SADd;AAEHC,IAAAA,MAAM,EAAE,GAFL;AAGHC,IAAAA,OAAO,EAAE;AAHN,GALsB;AAU7BjB,EAAAA,IAAI,EAAC;AACDkB,IAAAA,SAAS,EAAC;AADT,GAVwB;AAahCP,EAAAA,SAAS,EAAE;AACVG,IAAAA,IAAI,EAAE,CADI;AAEJK,IAAAA,UAAU,EAAE,QAFR;AAGJF,IAAAA,OAAO,EAAE;AAHL,GAbqB;AAkBhCT,EAAAA,cAAc,EAAE;AACfY,IAAAA,UAAU,EAAE,EADG;AAEfC,IAAAA,iBAAiB,EAAE,EAFJ;AAGTJ,IAAAA,OAAO,EAAE,EAHA;AAITK,IAAAA,SAAS,EAAE;AAJF,GAlBgB;AAwBhChB,EAAAA,YAAY,EAAE;AACPiB,IAAAA,QAAQ,EAAC,EADF;AAEPC,IAAAA,KAAK,EAAE,SAFA;AAGPC,IAAAA,UAAU,EAAE,KAHL;AAIPN,IAAAA,UAAU,EAAE;AAJL,GAxBkB;AA8B7BV,EAAAA,aAAa,EAAE;AACXiB,IAAAA,cAAc,EAAE,eADL;AAEXJ,IAAAA,SAAS,EAAE,QAFA;AAGXK,IAAAA,YAAY,EAAE,QAHH;AAIdZ,IAAAA,eAAe,EAAE,SAJH;AAKXa,IAAAA,KAAK,EAAE,KALI;AAMjBC,IAAAA,WAAW,EAAE,SANI;AAOXC,IAAAA,WAAW,EAAE;AAPF,GA9Bc;AAuC7BpB,EAAAA,IAAI,EAAE;AACFa,IAAAA,QAAQ,EAAC,EADP;AAEFC,IAAAA,KAAK,EAAE,SAFL;AAGFC,IAAAA,UAAU,EAAE,MAHV;AAIFN,IAAAA,UAAU,EAAE,QAJV;AAKFE,IAAAA,iBAAiB,EAAE,EALjB;AAMFU,IAAAA,eAAe,EAAE;AANf;AAvCuB,CAAlB,CAAf;AAiDA,eAAenE,QAAf","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, TextInput, SafeAreaView} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport CustomInput from '../../components/customInput';\r\nimport CustomButton from '../../components/customButton';\r\nimport CustomButtonSmall from '../../components/customButtonSmall';\r\n\r\nconst EditPost = ({ route, navigation }) => {\r\n    const [postContent, setPostContent] = useState('');\r\n    const [postChanges, setPostChanges] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [errorMess, setErrorMess] = useState('');\r\n\r\n    useEffect(() => {\r\n        navigation.addListener('focus', () => {\r\n            refreshPage();\r\n        })\r\n        checkLoggedIn();\r\n        viewPost();\r\n    }, [])\r\n\r\n    const refreshPage = () => {\r\n        checkLoggedIn();\r\n        viewPost();\r\n    }\r\n\r\n    const viewPost = async () => {\r\n        let postID = route.params.postID;\r\n        const value = await AsyncStorage.getItem(\"@session_token\");\r\n        const userID = await AsyncStorage.getItem(\"@user_id\")\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post/\" +postID, {\r\n            headers: {\r\n                \"X-Authorization\": value,\r\n            },\r\n        }).then((response) => {\r\n            if (response.status === 200 || response.status === 201) {\r\n                return response.json()\r\n            } else if (response.status === 401) {\r\n                navigation.navigate(\"Login\");\r\n            } else {\r\n                console.log(response.status);\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            setIsLoading(false);\r\n            setPostContent(responseJson.text);\r\n            console.log(response.status);\r\n            console.log('Post Fetched.');\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const editPost = async (textInput) => {\r\n        let postID = route.params.postID;\r\n        const value = await AsyncStorage.getItem(\"@session_token\");\r\n        const userID = await AsyncStorage.getItem(\"@user_id\")\r\n        if (textInput != ''){\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post/\" + postID, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                \"X-Authorization\": value,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"text\": textInput,\r\n            })\r\n        }).then((response) => {\r\n            if (response.status === 200 || response.status === 201) {\r\n                setErrorMess('Post Edited.');\r\n                return response.json()\r\n            } else if (response.status === 401) {\r\n                navigation.navigate(\"Login\");\r\n            } else {\r\n                console.log(response.status);\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            console.log('Post Edited.');\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n        } else {\r\n            setErrorMess('Please write at least 1 character before posting.');\r\n        }\r\n    }\r\n\r\n    const deletePost = async () => {\r\n        let postID = route.params.postID;\r\n        const value = await AsyncStorage.getItem(\"@session_token\");\r\n        const userID = await AsyncStorage.getItem(\"@user_id\");\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post/\" + postID, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"X-Authorization\": value,\r\n            }\r\n        }).then((response) => {\r\n            if (response.status === 200 || response.status === 201) {\r\n                setErrorMess('Post Deleted.');\r\n                return response.json()\r\n            } else if (response.status === 401) {\r\n                navigation.navigate(\"Login\");\r\n            } else {\r\n                console.log(response.status);\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            console.log('Post Deleted.');\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n    \r\n    const checkLoggedIn = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        if (value == null) {\r\n            navigation.navigate('Login');\r\n        }\r\n    };\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <SafeAreaView style={styles.root}>\r\n                <View><Text style={styles.sectionTitle}>Loading...</Text></View>\r\n            </SafeAreaView>\r\n        );\r\n    } else {\r\n        return (\r\n            <SafeAreaView style={styles.root}>\r\n                <View style={styles.header}>\r\n                    {/*Spacebook Logo*/}\r\n                    {/*Edit Post Page*/}\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={styles.sectionTitle}>Edit Post</Text>\r\n                    </View>\r\n                </View>\r\n                <Text style={styles.text}>{errorMess}</Text>\r\n                {/*Post displayed here*/}\r\n                <View style={styles.postContainer}>\r\n                    <Text style={styles.post}>{postContent}</Text>\r\n                </View>\r\n                <View style={styles.container}>\r\n                     {/*Text Input for Editing a Post*/}\r\n                     <CustomInput placeholder=\"Edit your post here...\" value={postChanges} setValue={setPostChanges} />\r\n                     {/*Button to Save Changes or Delete*/}\r\n                     <CustomButton text=\"Save Changes\" onPress={() => editPost(postChanges)} />\r\n                     <CustomButton text=\"Delete\" onPress={() => deletePost()} />\r\n                </View>\r\n            </SafeAreaView>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#ffcfe6',\r\n\t},\r\n    header:{\r\n        backgroundColor: \"#45ded0\",\r\n        height: 200,\r\n        padding: 10,\r\n    },\r\n    body:{\r\n        marginTop:40,\r\n    },\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n        alignItems: 'center',\r\n        padding: 30,\r\n\t},\r\n\ttitleContainer: {\r\n\t\tpaddingTop: 80,\r\n\t\tpaddingHorizontal: 40,\r\n        padding: 30,\r\n        alignSelf: 'center'\r\n\t},\r\n\tsectionTitle: {\r\n        fontSize:28,\r\n        color: \"#696969\",\r\n        fontWeight: \"600\",\r\n        alignItems: 'center',\r\n\t},\r\n    postContainer: {\r\n        justifyContent: 'space-between',\r\n        alignSelf: 'center',\r\n        alignContent: 'center',\r\n    \tbackgroundColor: '#ffffff',\r\n        width: '90%',\r\n\t\tborderColor: '#45ded0',\r\n        borderWidth: 1,\t\r\n    },\r\n    post: {\r\n        fontSize:16,\r\n        color: \"#696969\",\r\n        fontWeight: 'bold',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 10,\r\n    }\r\n});\r\n\r\nexport default EditPost;\r\n"]},"metadata":{},"sourceType":"module"}
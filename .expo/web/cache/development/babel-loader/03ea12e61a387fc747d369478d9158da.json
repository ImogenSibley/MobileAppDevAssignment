{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CustomInput from \"../../components/customInput\";\nimport CustomButton from \"../../components/customButton\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Search = function Search() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userList = _useState2[0],\n      setUserList = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filterUserList = _useState4[0],\n      setFilterUserList = _useState4[1];\n\n  var getAllUsers = function getAllUsers() {\n    var value;\n    return _regeneratorRuntime.async(function getAllUsers$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context.sent;\n            return _context.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/search\", {\n              'headers': {\n                'X-Authorization': value\n              }\n            }).then(function (response) {\n              if (response.status === 200) {\n                return response.json();\n              } else if (response.status === 401) {\n                _this.props.navigation.navigate(\"Login\");\n              } else {\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              console.log(responseJson);\n              setUserList(responseJson);\n              setFilterUserList(responseJson);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkLoggedIn = function checkLoggedIn() {\n    var value;\n    return _regeneratorRuntime.async(function checkLoggedIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context2.sent;\n\n            if (value == null) {\n              _this.props.navigation.navigate('Login');\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var ItemView = function ItemView(_ref) {\n    var item = _ref.item;\n    return _jsxs(Text, {\n      style: styles.results,\n      children: [item.id, item.user_givenname, ' ', item.user_familyname]\n    });\n  };\n\n  var ItemSeperatorView = function ItemSeperatorView() {\n    return _jsx(View, {\n      style: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#fff'\n      }\n    });\n  };\n\n  useEffect(function () {\n    checkLoggedIn();\n    getAllUsers();\n  }, []);\n  return _jsx(SafeAreaView, {\n    style: styles.root,\n    children: _jsx(ScrollView, {\n      children: _jsx(View, {\n        style: styles.header,\n        children: _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(View, {\n            style: styles.titleContainer,\n            children: _jsx(Text, {\n              style: styles.sectionTitle,\n              children: \"Search\"\n            })\n          }), _jsx(CustomInput, {\n            placeholder: \"Enter a name...\"\n          }), _jsx(CustomButton, {\n            text: \"Find Friends\"\n          }), _jsx(View, {\n            style: styles.results,\n            children: _jsx(FlatList, {\n              data: filterUserList,\n              keyExtractor: function keyExtractor(item, index) {\n                return index.toString();\n              },\n              ItemSeperatorComponent: ItemSeperatorView,\n              renderItem: ItemView\n            })\n          })]\n        })\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: '#ffcfe6'\n  },\n  header: {\n    backgroundColor: \"#45ded0\",\n    height: 200\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 30\n  },\n  titleContainer: {\n    paddingTop: 80,\n    paddingHorizontal: 40\n  },\n  sectionTitle: {\n    fontSize: 28,\n    color: \"#696969\",\n    fontWeight: \"600\"\n  },\n  results: {\n    fontSize: 16,\n    color: \"#696969\",\n    marginTop: 10\n  }\n});\nexport default Search;","map":{"version":3,"sources":["E:/Year 3/Mobile App Dev/MADAssignment/master/screens/Search/Search.js"],"names":["React","useState","useEffect","CustomInput","CustomButton","AsyncStorage","Search","userList","setUserList","filterUserList","setFilterUserList","getAllUsers","getItem","value","fetch","then","response","status","json","props","navigation","navigate","responseJson","console","log","catch","error","checkLoggedIn","ItemView","item","styles","results","id","user_givenname","user_familyname","ItemSeperatorView","height","width","backgroundColor","root","header","container","titleContainer","sectionTitle","index","toString","StyleSheet","create","flex","justifyContent","alignItems","padding","paddingTop","paddingHorizontal","fontSize","color","fontWeight","marginTop"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { View, Text, StyleSheet, TextInput, Image, SafeAreaView, FlatList, ScrollView} from 'react-native';\r\nimport CustomInput from '../../components/customInput';\r\nimport CustomButton from '../../components/customButton';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst Search = () => {\r\n  const [userList, setUserList] = useState('');\r\n  const [filterUserList, setFilterUserList] = useState('');\r\n\r\n  const getAllUsers = async () => {\r\n    const value = await AsyncStorage.getItem('@session_token');\r\n    return fetch(\"http://localhost:3333/api/1.0.0/search\", {\r\n          'headers': {\r\n            'X-Authorization':  value\r\n          }\r\n        })\r\n        .then((response) => {\r\n            if(response.status === 200){\r\n                return response.json()\r\n            }else if(response.status === 401){\r\n              this.props.navigation.navigate(\"Login\");\r\n            }else{\r\n                throw 'Something went wrong';\r\n            }\r\n        })\r\n        .then((responseJson) => {\r\n           console.log(responseJson);\r\n           setUserList(responseJson);\r\n           setFilterUserList(responseJson);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n  };\r\n\r\n  const checkLoggedIn = async () => {\r\n    const value = await AsyncStorage.getItem('@session_token');\r\n    if (value == null) {\r\n        this.props.navigation.navigate('Login');\r\n    }\r\n  };\r\n\r\n  const ItemView = ({item}) => {\r\n    return (\r\n        <Text style={styles.results}>\r\n        {item.id}{item.user_givenname}{' '}{item.user_familyname}\r\n        </Text>\r\n    );\r\n  }\r\n\r\n  const ItemSeperatorView = () => {\r\n    return (\r\n        <View \r\n            style={{height: 0.5, width: '100%', backgroundColor: '#fff'}}\r\n        />\r\n    );\r\n  }\r\n\r\n   useEffect(() => {\r\n        checkLoggedIn();\r\n        getAllUsers();\r\n    }, []);\r\n\r\n    return (\r\n\t\t<SafeAreaView style={styles.root}>\r\n        <ScrollView>\r\n            <View style={styles.header}>\r\n                <View style={styles.container}>\r\n                    {/*Search Page*/}\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={styles.sectionTitle}>Search</Text>\r\n\t\t\t        </View>\r\n                    {/*Text Input for Searching for friends*/}\r\n\t\t\t        <CustomInput placeholder=\"Enter a name...\"/>\r\n\t\t\t        {/*Button to Search*/}\r\n\t\t\t        <CustomButton text=\"Find Friends\"/>\r\n                    <View style={styles.results}>\r\n                        <FlatList\r\n                            data={filterUserList}\r\n                            keyExtractor={(item, index) => index.toString()}\r\n                            ItemSeperatorComponent={ItemSeperatorView}\r\n                            renderItem={ItemView}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </ScrollView>\r\n\t\t</SafeAreaView>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#ffcfe6',\r\n\t},\r\n\theader:{\r\n        backgroundColor: \"#45ded0\",\r\n        height:200,\r\n    },\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tjustifyContent: 'flex-start',\r\n\t\talignItems: 'center',\r\n\t\tpadding: 30\r\n\t},\r\n\ttitleContainer: {\r\n\t\tpaddingTop: 80,\r\n\t\tpaddingHorizontal: 40,\r\n\t},\r\n\tsectionTitle: {\r\n\t\tfontSize:28,\r\n        color: \"#696969\",\r\n        fontWeight: \"600\"\r\n\t},\r\n    results: {\r\n        fontSize:16,\r\n        color: \"#696969\",\r\n        marginTop:10\r\n    }\r\n});\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}
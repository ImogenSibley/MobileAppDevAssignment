{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Friends = function Friends() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      friendList = _useState2[0],\n      setFriendList = _useState2[1];\n\n  var getFriendList = function getFriendList() {\n    var value, userID;\n    return _regeneratorRuntime.async(function getFriendList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n          case 5:\n            userID = _context.sent;\n            return _context.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/friends\", {\n              'headers': {\n                'X-Authorization': value\n              }\n            }).then(function (response) {\n              if (response.status === 200) {\n                return response.json();\n              } else if (response.status === 401) {\n                _this.props.navigation.navigate(\"Login\");\n              } else {\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              console.log(responseJson);\n              setFriendList(responseJson);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkLoggedIn = function checkLoggedIn() {\n    var value;\n    return _regeneratorRuntime.async(function checkLoggedIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context2.sent;\n\n            if (value == null) {\n              _this.props.navigation.navigate('Login');\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var ItemView = function ItemView(_ref) {\n    var item = _ref.item;\n    return _jsx(View, {\n      children: _jsxs(Text, {\n        style: styles.text,\n        children: [item.id, item.user_givenname, ' ', item.user_familyname]\n      })\n    });\n  };\n\n  var ItemSeperatorView = function ItemSeperatorView() {\n    return _jsx(View, {\n      style: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: 'white'\n      }\n    });\n  };\n\n  useEffect(function () {\n    checkLoggedIn();\n    getFriendList();\n  }, []);\n  return _jsx(SafeAreaView, {\n    style: styles.root,\n    children: _jsx(ScrollView, {\n      children: _jsx(View, {\n        style: styles.header,\n        children: _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(View, {\n            style: styles.titleContainer,\n            children: _jsx(Text, {\n              style: styles.sectionTitle,\n              children: \"My Friends\"\n            })\n          }), _jsx(View, {\n            style: styles.text,\n            children: _jsx(FlatList, {\n              data: friendList,\n              keyExtractor: function keyExtractor(item, index) {\n                return index.toString();\n              },\n              ItemSeperatorComponent: ItemSeperatorView,\n              renderItem: ItemView\n            })\n          })]\n        })\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: '#ffcfe6'\n  },\n  header: {\n    backgroundColor: \"#45ded0\",\n    height: 200\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 30\n  },\n  titleContainer: {\n    paddingTop: 80,\n    paddingHorizontal: 40\n  },\n  sectionTitle: {\n    fontSize: 28,\n    color: \"#696969\",\n    fontWeight: \"600\"\n  },\n  text: {\n    fontSize: 16,\n    color: \"#696969\",\n    marginTop: 10,\n    fontWeight: 'bold'\n  },\n  inputContainer: {\n    backgroundColor: '#fff',\n    width: '90%',\n    borderRadius: 60,\n    borderColor: '#45ded0',\n    borderWidth: 2,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 60\n  }\n});\nexport default Friends;","map":{"version":3,"sources":["E:/Year 3/Mobile App Dev/MADAssignment/master/screens/Friends/Friends.js"],"names":["React","useState","useEffect","AsyncStorage","Friends","friendList","setFriendList","getFriendList","getItem","value","userID","fetch","then","response","status","json","props","navigation","navigate","responseJson","console","log","catch","error","checkLoggedIn","ItemView","item","styles","text","id","user_givenname","user_familyname","ItemSeperatorView","height","width","backgroundColor","root","header","container","titleContainer","sectionTitle","index","toString","StyleSheet","create","flex","justifyContent","alignItems","padding","paddingTop","paddingHorizontal","fontSize","color","fontWeight","marginTop","inputContainer","borderRadius","borderColor","borderWidth","paddingVertical"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { View, Text, StyleSheet, TextInput, Image, SafeAreaView, FlatList, ScrollView} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst Friends = () => {\r\n    const [friendList, setFriendList] = useState('');\r\n\r\n\tconst getFriendList = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        const userID = await AsyncStorage.getItem('@user_id')\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\"+userID+\"/friends\", {\r\n            'headers': {\r\n            'X-Authorization':  value\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if(response.status === 200){\r\n                return response.json()\r\n            }else if(response.status === 401){\r\n              this.props.navigation.navigate(\"Login\");\r\n            }else{\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            console.log(responseJson);\r\n            setFriendList(responseJson);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n    \r\n    const checkLoggedIn = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        if (value == null) {\r\n            this.props.navigation.navigate('Login');\r\n        }\r\n    };\r\n\r\n    const ItemView = ({item}) => {\r\n        return (\r\n            <View>\r\n                <Text style={styles.text}>\r\n                {item.id}{item.user_givenname}{' '}{item.user_familyname}\r\n                </Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n  const ItemSeperatorView = () => {\r\n    return (\r\n        <View \r\n            style={{height: 0.5, width: '100%', backgroundColor: 'white'}}\r\n        />\r\n    );\r\n  }\r\n\r\n    useEffect(() => {\r\n      checkLoggedIn();\r\n      getFriendList();\r\n    }, []);\r\n\r\n\treturn (\r\n\t\t<SafeAreaView style={styles.root}>\r\n        <ScrollView>\r\n            <View style={styles.header}>\r\n                <View style={styles.container}>\r\n                    {/*Friends List Page*/}\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={styles.sectionTitle}>My Friends</Text>\r\n\t\t\t        </View>\r\n                    {/*Text Input for Searching for friends within friends list?*/}\r\n                    <View style={styles.text}>\r\n                        <FlatList\r\n                            data={friendList}\r\n                            keyExtractor={(item, index) => index.toString()}\r\n                            ItemSeperatorComponent={ItemSeperatorView}\r\n                            renderItem={ItemView}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </ScrollView>\r\n\t\t</SafeAreaView>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#ffcfe6',\r\n\t},\r\n\theader:{\r\n        backgroundColor: \"#45ded0\",\r\n        height:200,\r\n    },\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tjustifyContent: 'flex-start',\r\n\t\talignItems: 'center',\r\n\t\tpadding: 30\r\n\t},\r\n\ttitleContainer: {\r\n\t\tpaddingTop: 80,\r\n\t\tpaddingHorizontal: 40,\r\n\t},\r\n\tsectionTitle: {\r\n\t\tfontSize:28,\r\n        color: \"#696969\",\r\n        fontWeight: \"600\"\r\n\t},\r\n    text: {\r\n        fontSize:16,\r\n        color: \"#696969\",\r\n        marginTop:10,\r\n        fontWeight: 'bold'\r\n    },\r\n    inputContainer: {\r\n\t\tbackgroundColor: '#fff',\r\n\t\twidth: '90%',\r\n\t\tborderRadius: 60,\r\n\t\tborderColor: '#45ded0',\r\n\t\tborderWidth: 2,\t\r\n        paddingHorizontal: 20,\r\n\t\tpaddingVertical: 10,\r\n\t\tborderRadius: 60,\r\n    }\r\n});\r\n\r\nexport default Friends;"]},"metadata":{},"sourceType":"module"}
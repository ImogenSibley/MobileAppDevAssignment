{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CustomButton from \"../../components/customButton\";\nimport CustomButtonSmall from \"../../components/customButtonSmall\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar OtherProfile = function OtherProfile(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstName = _useState4[0],\n      setFirstName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastName = _useState6[0],\n      setLastName = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      numOfFriends = _useState8[0],\n      setNumOfFriends = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      posts = _useState10[0],\n      setPosts = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isLoading = _useState12[0],\n      setIsLoading = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      photo = _useState14[0],\n      setPhoto = _useState14[1];\n\n  var getUserData = function getUserData() {\n    var requestedUserID, value;\n    return _regeneratorRuntime.async(function getUserData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            requestedUserID = route.params.requestedUserID;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 3:\n            value = _context2.sent;\n            return _context2.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + requestedUserID, {\n              'headers': {\n                'X-Authorization': value\n              }\n            }).then(function (response) {\n              if (response.status === 200) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                throw 'Something went wrong';\n              }\n            }).then(function _callee(responseJson) {\n              var first, last, emailAddress, friendCount;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      first = responseJson.first_name;\n                      setFirstName(first);\n                      last = responseJson.last_name;\n                      setLastName(last);\n                      emailAddress = responseJson.email;\n                      setEmail(emailAddress);\n                      friendCount = responseJson.friend_count;\n                      setNumOfFriends(friendCount);\n\n                    case 8:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getUserPhoto = function getUserPhoto() {\n    var value, userID;\n    return _regeneratorRuntime.async(function getUserPhoto$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n          case 5:\n            userID = _context3.sent;\n            return _context3.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/photo\", {\n              'headers': {\n                'X-Authorization': value\n              }\n            }).then(function (res) {\n              return res.blob();\n            }).then(function (resBlob) {\n              var data = URL.createObjectURL(resBlob);\n              setPhoto(data);\n              setIsLoading(false);\n            }).catch(function (err) {\n              console.log(\"error\", err);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getAllPosts = function getAllPosts() {\n    var value, requestedUserID;\n    return _regeneratorRuntime.async(function getAllPosts$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context4.sent;\n            requestedUserID = route.params.requestedUserID;\n            return _context4.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + requestedUserID + \"/post\", {\n              'headers': {\n                'X-Authorization': value\n              }\n            }).then(function (response) {\n              if (response.status === 200) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              console.log(responseJson);\n              setPosts(responseJson);\n              setIsLoading(false);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addLike = function addLike(postID) {\n    var value, requestedUserID;\n    return _regeneratorRuntime.async(function addLike$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n          case 2:\n            value = _context5.sent;\n            requestedUserID = route.params.requestedUserID;\n            return _context5.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + requestedUserID + \"/post/\" + postID + \"/like\", {\n              method: 'POST',\n              headers: {\n                \"X-Authorization\": value\n              }\n            }).then(function (response) {\n              if (response.status === 200 || response.status === 201) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else if (response.status === 404) {\n                throw 'Post or User Not Found.';\n              } else if (response.status === 403) {\n                throw 'You have already liked this post.';\n              } else {\n                console.log(response.status);\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              console.log(\"Post Liked Successfully! - \" + responseJson.status);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var removeLike = function removeLike(postID) {\n    var value, requestedUserID;\n    return _regeneratorRuntime.async(function removeLike$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n          case 2:\n            value = _context6.sent;\n            requestedUserID = route.params.requestedUserID;\n            return _context6.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + requestedUserID + \"/post/\" + postID + \"/like\", {\n              method: 'DELETE',\n              headers: {\n                \"X-Authorization\": value\n              }\n            }).then(function (response) {\n              if (response.status === 200 || response.status === 201) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else if (response.status === 404) {\n                throw 'Post or User Not Found.';\n              } else if (response.status === 403) {\n                throw 'You have not liked this post.';\n              } else {\n                console.log(response.status);\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              console.log(\"Removed Like Successfully! - \" + responseJson.status);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 5:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var ItemView = function ItemView(_ref2) {\n    var item = _ref2.item;\n    return _jsx(View, {\n      style: styles.postContainer,\n      children: _jsxs(Text, {\n        style: styles.post,\n        children: [item.id, item.author.first_name, ' ', item.author.last_name, ' - ', item.text, ' ', item.timestamp, ' - Likes: ', item.numLikes, ' ', _jsx(CustomButtonSmall, {\n          text: \"+ Like\",\n          onPress: function onPress() {\n            return addLike(item.post_id);\n          }\n        }), ' ', _jsx(CustomButtonSmall, {\n          text: \"- Like\",\n          onPress: function onPress() {\n            return removeLike(item.post_id);\n          }\n        })]\n      })\n    });\n  };\n\n  var ItemSeperatorView = function ItemSeperatorView() {\n    return _jsx(View, {\n      style: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: 'white'\n      }\n    });\n  };\n\n  var checkLoggedIn = function checkLoggedIn() {\n    var value;\n    return _regeneratorRuntime.async(function checkLoggedIn$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context7.sent;\n\n            if (value == null) {\n              navigation.navigate('Login');\n            }\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    checkLoggedIn();\n    getUserData();\n    getAllPosts();\n  }, []);\n\n  if (isLoading) {\n    return _jsx(SafeAreaView, {\n      style: styles.root,\n      children: _jsx(View, {\n        children: _jsx(Text, {\n          style: styles.name,\n          children: \"Loading...\"\n        })\n      })\n    });\n  } else {\n    return _jsx(SafeAreaView, {\n      style: styles.root,\n      children: _jsxs(ScrollView, {\n        children: [_jsx(View, {\n          style: styles.header\n        }), _jsx(Image, {\n          style: styles.avatar,\n          source: {\n            photo: photo\n          }\n        }), _jsx(View, {\n          style: styles.body,\n          children: _jsxs(View, {\n            style: styles.container,\n            children: [_jsxs(Text, {\n              style: styles.name,\n              children: [firstName, \" \", lastName]\n            }), _jsx(Text, {\n              style: styles.info,\n              children: email\n            }), _jsxs(Text, {\n              style: styles.info,\n              children: [\"Following: \", numOfFriends]\n            }), _jsx(CustomButton, {\n              text: \"Friends\"\n            }), _jsx(FlatList, {\n              data: posts,\n              keyExtractor: function keyExtractor(item, index) {\n                return index.toString();\n              },\n              ItemSeperatorComponent: ItemSeperatorView,\n              renderItem: ItemView\n            })]\n          })\n        })]\n      })\n    });\n  }\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: '#ffcfe6'\n  },\n  header: {\n    backgroundColor: \"#45ded0\",\n    height: 200\n  },\n  avatar: {\n    width: 130,\n    height: 130,\n    borderRadius: 63,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10,\n    alignSelf: 'center',\n    position: 'absolute',\n    marginTop: 130\n  },\n  body: {\n    marginTop: 40\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 30\n  },\n  name: {\n    fontSize: 28,\n    color: \"#696969\",\n    fontWeight: \"600\",\n    alignItems: 'center'\n  },\n  info: {\n    fontSize: 16,\n    color: \"#696969\",\n    marginTop: 10\n  },\n  postContainer: {\n    justifyContent: 'space-between',\n    alignSelf: 'center',\n    alignContent: 'center',\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderColor: '#45ded0',\n    borderWidth: 1\n  },\n  post: {\n    fontSize: 16,\n    color: \"#696969\",\n    fontWeight: 'bold',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 10\n  }\n});\nexport default OtherProfile;","map":{"version":3,"sources":["F:/Year 3/Mobile App Dev/MADAssignment/master/screens/OtherProfile/OtherProfile.js"],"names":["React","useState","useEffect","CustomButton","CustomButtonSmall","AsyncStorage","OtherProfile","route","navigation","email","setEmail","firstName","setFirstName","lastName","setLastName","numOfFriends","setNumOfFriends","posts","setPosts","isLoading","setIsLoading","photo","setPhoto","getUserData","requestedUserID","params","getItem","value","fetch","then","response","status","json","navigate","responseJson","first","first_name","last","last_name","emailAddress","friendCount","friend_count","catch","error","console","log","getUserPhoto","userID","res","blob","resBlob","data","URL","createObjectURL","err","getAllPosts","addLike","postID","method","headers","removeLike","ItemView","item","styles","postContainer","post","id","author","text","timestamp","numLikes","post_id","ItemSeperatorView","height","width","backgroundColor","checkLoggedIn","root","name","header","avatar","body","container","info","index","toString","StyleSheet","create","flex","borderRadius","borderWidth","borderColor","marginBottom","alignSelf","position","marginTop","alignItems","padding","fontSize","color","fontWeight","justifyContent","alignContent","paddingHorizontal","paddingVertical"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Text, View, SafeAreaView, StyleSheet, Image, FlatList, ScrollView } from 'react-native';\r\nimport CustomButton from '../../components/customButton'; \r\nimport CustomButtonSmall from '../../components/customButtonSmall';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst OtherProfile = ({route, navigation}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [numOfFriends, setNumOfFriends] = useState('');\r\n    const [posts, setPosts] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [photo, setPhoto] = useState(null);\r\n\r\n    const getUserData = async () => {\r\n        let requestedUserID = route.params.requestedUserID;\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\"+requestedUserID, {\r\n            'headers': {\r\n            'X-Authorization':  value\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if(response.status === 200){\r\n                return response.json()\r\n            }else if(response.status === 401){\r\n              navigation.navigate(\"Login\");\r\n            }else{\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then(async (responseJson) => {\r\n            let first = responseJson.first_name;\r\n            setFirstName(first);\r\n            let last = responseJson.last_name;\r\n            setLastName(last);\r\n            let emailAddress = responseJson.email;\r\n            setEmail(emailAddress);\r\n            let friendCount = responseJson.friend_count;\r\n            setNumOfFriends(friendCount);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const getUserPhoto = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        const userID = await AsyncStorage.getItem('@user_id')\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/photo\", {\r\n            'headers': {\r\n                'X-Authorization': value\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res.blob();\r\n            })\r\n            .then((resBlob) => {\r\n                let data = URL.createObjectURL(resBlob);\r\n                setPhoto(data);\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"error\", err)\r\n            });\r\n    }\r\n\r\n    const getAllPosts = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        let requestedUserID = route.params.requestedUserID;\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\" + requestedUserID + \"/post\", {\r\n            'headers': {\r\n                'X-Authorization': value\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    return response.json()\r\n                } else if (response.status === 401) {\r\n                    navigation.navigate(\"Login\");\r\n                } else {\r\n                    throw 'Something went wrong';\r\n                }\r\n            }).then((responseJson) => {\r\n                console.log(responseJson);\r\n                setPosts(responseJson);\r\n                setIsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const addLike = async (postID) => {\r\n        const value = await AsyncStorage.getItem(\"@session_token\");\r\n        let requestedUserID = route.params.requestedUserID;\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\" + requestedUserID + \"/post/\" + postID + \"/like\", {\r\n            method: 'POST',\r\n            headers: {\r\n                \"X-Authorization\": value,\r\n            },\r\n        }).then((response) => {\r\n            if (response.status === 200 || response.status === 201) {\r\n                return response.json()\r\n            } else if (response.status === 401) {\r\n                navigation.navigate(\"Login\");\r\n            } else if (response.status === 404){\r\n                throw 'Post or User Not Found.';\r\n            } else if (response.status === 403){\r\n                throw 'You have already liked this post.';\r\n            } else {\r\n                console.log(response.status);\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            console.log(\"Post Liked Successfully! - \"+responseJson.status);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n      const removeLike = async (postID) => {\r\n        const value = await AsyncStorage.getItem(\"@session_token\");\r\n        let requestedUserID = route.params.requestedUserID;\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\" + requestedUserID + \"/post/\" + postID + \"/like\", {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"X-Authorization\": value,\r\n            },\r\n        }).then((response) => {\r\n            if (response.status === 200 || response.status === 201) {\r\n                return response.json()\r\n            } else if (response.status === 401) {\r\n                navigation.navigate(\"Login\");\r\n            } else if (response.status === 404){\r\n                throw 'Post or User Not Found.';\r\n            } else if (response.status === 403){\r\n                throw 'You have not liked this post.';\r\n            } else {\r\n                console.log(response.status);\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            console.log(\"Removed Like Successfully! - \"+responseJson.status);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const ItemView = ({ item }) => {\r\n        return (\r\n            <View style={styles.postContainer}>\r\n                <Text style={styles.post}>\r\n                    {item.id}{item.author.first_name}{' '}{item.author.last_name}{' - '}{item.text}{' '}{item.timestamp}{' - Likes: '}{item.numLikes}\r\n                    {' '}<CustomButtonSmall text=\"+ Like\" onPress={() => addLike(item.post_id)}/>{' '}<CustomButtonSmall text=\"- Like\" onPress={() => removeLike(item.post_id)}/>\r\n                </Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    const ItemSeperatorView = () => {\r\n        return (\r\n            <View\r\n                style={{ height: 0.5, width: '100%', backgroundColor: 'white' }}\r\n            />\r\n        );\r\n    }\r\n    \r\n    const checkLoggedIn = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        if (value == null) {\r\n            navigation.navigate('Login');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        checkLoggedIn();\r\n        getUserData();\r\n        getAllPosts();\r\n    }, [])\r\n\r\n\r\n    // default photo? uri: 'https://miro.medium.com/max/3150/1*I8orYDhyFrbI-p21DstL6A.jpeg'\r\n    \r\n    if (isLoading) {\r\n        return (\r\n            <SafeAreaView style={styles.root}>\r\n                <View><Text style={styles.name}>Loading...</Text></View>\r\n            </SafeAreaView>\r\n        );\r\n    } else {\r\n\treturn (\r\n\t<SafeAreaView style={styles.root}>\r\n        <ScrollView>\r\n            <View style={styles.header}></View>\r\n            <Image style={styles.avatar} source={{photo}}/>\r\n                <View style={styles.body}>\r\n                    <View style={styles.container}>\r\n                        <Text style={styles.name}>{firstName} {lastName}</Text>\r\n                        <Text style={styles.info}>{email}</Text>\r\n                        <Text style={styles.info}>Following: {numOfFriends}</Text>\r\n                        {/*If not already friends, show button to add user as friend*/}\r\n\t\t\t            <CustomButton text=\"Friends\"/>\r\n                        <FlatList\r\n                            data={posts}\r\n                            keyExtractor={(item, index) => index.toString()}\r\n                            ItemSeperatorComponent={ItemSeperatorView}\r\n                            renderItem={ItemView}\r\n                        />\r\n                    </View>\r\n                </View>\r\n        </ScrollView>\r\n\t</SafeAreaView>\r\n\t);\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    root: {\r\n        flex: 1,\r\n        backgroundColor: '#ffcfe6',\r\n    },\r\n    header: {\r\n        backgroundColor: \"#45ded0\",\r\n        height: 200,\r\n    },\r\n    avatar: {\r\n        width: 130,\r\n        height: 130,\r\n        borderRadius: 63,\r\n        borderWidth: 4,\r\n        borderColor: \"white\",\r\n        marginBottom: 10,\r\n        alignSelf: 'center',\r\n        position: 'absolute',\r\n        marginTop: 130\r\n    },\r\n    body: {\r\n        marginTop: 40,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        padding: 30,\r\n    },\r\n    name: {\r\n        fontSize: 28,\r\n        color: \"#696969\",\r\n        fontWeight: \"600\",\r\n        alignItems: 'center',\r\n    },\r\n    info: {\r\n        fontSize: 16,\r\n        color: \"#696969\",\r\n        marginTop: 10\r\n    },\r\n    postContainer: {\r\n        justifyContent: 'space-between',\r\n        alignSelf: 'center',\r\n        alignContent: 'center',\r\n        backgroundColor: '#ffffff',\r\n        width: '90%',\r\n        borderColor: '#45ded0',\r\n        borderWidth: 1,\r\n    },\r\n    post: {\r\n        fontSize: 16,\r\n        color: \"#696969\",\r\n        fontWeight: 'bold',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 10,\r\n    }\r\n});\r\n\r\nexport default OtherProfile;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { Ionicons } from '@expo/vector-icons';\nimport 'react-native-gesture-handler';\nimport Login from \"./screens/Login\";\nimport Home from \"./screens/Home\";\nimport Profile from \"./screens/Profile\";\nimport Search from \"./screens/Search\";\nimport AccountSettings from \"./screens/AccountSettings\";\nimport Logout from \"./screens/Logout\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\n\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      })]\n    })\n  });\n}\n\nfunction DrawerHome() {\n  return _jsxs(Drawer.Navigator, {\n    initialRouteName: \"Home\",\n    children: [_jsx(Drawer.Screen, {\n      name: \"Home\",\n      component: Home\n    }), _jsx(Drawer.Screen, {\n      name: \"Account Settings\",\n      component: AccountSettings\n    }), _jsx(Drawer.Screen, {\n      name: \"Logout\",\n      component: Logout\n    })]\n  });\n}\n\nfunction HomeScreen() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-planet' : 'ios-planet-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'ios-person' : 'ios-person-outline';\n          } else if (route.name === 'Search') {\n            iconName = focused ? 'ios-search' : 'ios-search-outline';\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#45ded0',\n        tabBarInactiveTintColor: '#28a3a5'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: Profile,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Search\",\n      component: Search,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["F:/Year 3/Mobile App Dev/MADAssignment/master/App.js"],"names":["React","Component","NavigationContainer","createBottomTabNavigator","createStackNavigator","createDrawerNavigator","Ionicons","Login","Home","Profile","Search","AccountSettings","Logout","Drawer","Tab","Stack","App","headerShown","HomeScreen","DrawerHome","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport 'react-native-gesture-handler';\r\n\r\nimport Login from './screens/Login';\r\n//import Signup from './screens/Signup';\r\nimport Home from './screens/Home';\r\nimport Profile from './screens/Profile';\r\nimport Search from './screens/Search';\r\nimport AccountSettings from './screens/AccountSettings';\r\nimport Logout from './screens/Logout';\r\n\r\n\r\n//----------------------------------------------\r\n//App Main\r\n\r\nconst Drawer = createDrawerNavigator();\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\nfunction App(){\r\n    return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen\r\n          name=\"Login\"\r\n          component={Login}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction DrawerHome() {\r\n    return (\r\n         <Drawer.Navigator initialRouteName=\"Home\">\r\n             <Drawer.Screen name=\"Home\" component={Home}  />\r\n             <Drawer.Screen name=\"Account Settings\" component={AccountSettings} />\r\n             <Drawer.Screen name=\"Logout\" component={Logout} /> \r\n         </Drawer.Navigator>\r\n    );\r\n}\r\n\r\nfunction HomeScreen() {\r\n    return ( \r\n        //<NavigationContainer>\r\n            <Tab.Navigator //main page when logged in\r\n                screenOptions={({ route }) => ({\r\n                    tabBarIcon: ({ focused, color, size }) => {\r\n                        let iconName;\r\n\r\n                        if (route.name === 'Home') {\r\n                            iconName = focused\r\n                                ? 'ios-planet'\r\n                                : 'ios-planet-outline';\r\n                        } else if (route.name === 'Profile' ) {\r\n                            iconName = focused\r\n                                ? 'ios-person'\r\n                                : 'ios-person-outline';\r\n                        } else if (route.name === 'Search' ) {\r\n                            iconName = focused\r\n                                ? 'ios-search'\r\n                                : 'ios-search-outline';\r\n                        }\r\n\r\n                        // You can return any component that you like here!\r\n                        return <Ionicons name={iconName} size={size} color={color} />;\r\n                    },\r\n                    tabBarActiveTintColor: '#45ded0',\r\n                    tabBarInactiveTintColor: '#28a3a5',\r\n                })}\r\n            >\r\n                <Tab.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false }} />\r\n                <Tab.Screen name=\"Profile\" component={Profile} options={{ headerShown: false }}/>\r\n                <Tab.Screen name=\"Search\" component={Search} options={{ headerShown: false }}/>\r\n     \r\n            </Tab.Navigator>\r\n       //</NavigationContainer>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}
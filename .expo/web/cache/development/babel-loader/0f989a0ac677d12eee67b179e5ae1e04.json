{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport React, { Component, useState, useEffect } from 'react';\nimport Task from \"./components/Task\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.tasksWrapper,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Today's Tasks\"\n      }), _jsxs(View, {\n        style: styles.items,\n        children: [_jsx(Task, {\n          text: 'Task 1'\n        }), _jsx(Task, {\n          text: 'Task 2'\n        }), _jsx(Task, {\n          text: 'Task 3'\n        }), _jsx(Task, {\n          text: 'Task 4'\n        }), _jsx(Task, {\n          text: 'Task 5'\n        })]\n      })]\n    }), _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: styles.writeTaskWrapper,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: 'Write a task',\n        value: task,\n        onChangeText: function onChangeText(text) {\n          return setTask(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleAddTask();\n        },\n        children: _jsx(View, {\n          style: styles.addWrapper,\n          children: _jsx(Text, {\n            style: styles.addText,\n            children: \"+\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ffcfe6'\n  },\n  tasksWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 40\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontFamily: 'helvetica',\n    fontWeight: 'bold'\n  },\n  items: {\n    marginTop: 30\n  },\n  addText: {},\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: '#fff',\n    borderRadius: 60,\n    justifyContents: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: '#fff',\n    borderRadius: 60,\n    borderColor: '#ffcfe6',\n    borderWidth: 1,\n    width: 250\n  },\n  writeTaskWrapper: {\n    position: 'absolute',\n    bottom: 60,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContents: 'space-around',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["E:/Year 3/Mobile App Dev/MobileAppDevAssignment/App.js"],"names":["StatusBar","React","Component","useState","useEffect","Task","App","styles","container","tasksWrapper","sectionTitle","items","Platform","OS","writeTaskWrapper","input","task","text","setTask","handleAddTask","addWrapper","addText","StyleSheet","create","flex","backgroundColor","paddingTop","paddingHorizontal","fontSize","fontFamily","fontWeight","marginTop","width","height","borderRadius","justifyContents","alignItems","paddingVertical","borderColor","borderWidth","position","bottom","flexDirection"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;;;;;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,IAAP;;;AAKA,eAAe,SAASC,GAAT,GAAe;AAC7B,SACC,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,eAEC,MAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA,iBACC,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,YAApB;AAAA;AAAA,QADD,EAEC,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,KAApB;AAAA,mBAEC,KAAC,IAAD;AAAM,UAAA,IAAI,EAAE;AAAZ,UAFD,EAGC,KAAC,IAAD;AAAM,UAAA,IAAI,EAAE;AAAZ,UAHD,EAIC,KAAC,IAAD;AAAM,UAAA,IAAI,EAAE;AAAZ,UAJD,EAKC,KAAC,IAAD;AAAM,UAAA,IAAI,EAAE;AAAZ,UALD,EAMC,KAAC,IAAD;AAAM,UAAA,IAAI,EAAE;AAAZ,UAND;AAAA,QAFD;AAAA,MAFD,EAgBC,MAAC,oBAAD;AACC,MAAA,QAAQ,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,QAD/C;AAEC,MAAA,KAAK,EAAEN,MAAM,CAACO,gBAFf;AAAA,iBAIC,KAAC,SAAD;AAAW,QAAA,KAAK,EAAEP,MAAM,CAACQ,KAAzB;AAAgC,QAAA,WAAW,EAAE,cAA7C;AAA6D,QAAA,KAAK,EAAEC,IAApE;AAA0E,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAIC,OAAO,CAACD,IAAD,CAAX;AAAA;AAA5F,QAJD,EAKC,KAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAME,aAAa,EAAnB;AAAA,SAA3B;AAAA,kBACC,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEZ,MAAM,CAACa,UAApB;AAAA,oBACC,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEb,MAAM,CAACc,OAApB;AAAA;AAAA;AADD;AADD,QALD;AAAA,MAhBD;AAAA,IADD;AAgCA;AAEA,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAChCf,EAAAA,SAAS,EAAE;AACVgB,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,eAAe,EAAE;AAFP,GADqB;AAMhChB,EAAAA,YAAY,EAAE;AACbiB,IAAAA,UAAU,EAAE,EADC;AAEbC,IAAAA,iBAAiB,EAAE;AAFN,GANkB;AAUhCjB,EAAAA,YAAY,EAAE;AACbkB,IAAAA,QAAQ,EAAE,EADG;AAEbC,IAAAA,UAAU,EAAE,WAFC;AAGbC,IAAAA,UAAU,EAAE;AAHC,GAVkB;AAehCnB,EAAAA,KAAK,EAAE;AACNoB,IAAAA,SAAS,EAAE;AADL,GAfyB;AAkBhCV,EAAAA,OAAO,EAAE,EAlBuB;AAmBhCD,EAAAA,UAAU,EAAE;AACXY,IAAAA,KAAK,EAAE,EADI;AAEXC,IAAAA,MAAM,EAAE,EAFG;AAGXR,IAAAA,eAAe,EAAE,MAHN;AAIXS,IAAAA,YAAY,EAAE,EAJH;AAKXC,IAAAA,eAAe,EAAE,QALN;AAMXC,IAAAA,UAAU,EAAE;AAND,GAnBoB;AA2BhCrB,EAAAA,KAAK,EAAE;AACNsB,IAAAA,eAAe,EAAE,EADX;AAENV,IAAAA,iBAAiB,EAAE,EAFb;AAGNF,IAAAA,eAAe,EAAE,MAHX;AAINS,IAAAA,YAAY,EAAE,EAJR;AAKNI,IAAAA,WAAW,EAAE,SALP;AAMNC,IAAAA,WAAW,EAAE,CANP;AAONP,IAAAA,KAAK,EAAE;AAPD,GA3ByB;AAoChClB,EAAAA,gBAAgB,EAAE;AACjB0B,IAAAA,QAAQ,EAAE,UADO;AAEjBC,IAAAA,MAAM,EAAE,EAFS;AAGjBT,IAAAA,KAAK,EAAE,MAHU;AAIjBU,IAAAA,aAAa,EAAE,KAJE;AAKjBP,IAAAA,eAAe,EAAE,cALA;AAMjBC,IAAAA,UAAU,EAAE;AANK;AApCc,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, Image, ScrollView, TextInput, KeyboardAvoidingView, Keyboard } from 'react-native';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport Task from './components/Task';\r\n\r\n//----------------------------------------------\r\n//TO DO LIST APP\r\n\r\nexport default function App() {\r\n\treturn(\r\n\t\t<View style={styles.container}>\r\n\t\t{/*Today's Tasks*/}\r\n\t\t\t<View style={styles.tasksWrapper}>\r\n\t\t\t\t<Text style={styles.sectionTitle}>Today's Tasks</Text>\r\n\t\t\t\t<View style={styles.items}>\r\n\t\t\t\t\t{/*This is where the tasks will go! */}\r\n\t\t\t\t\t<Task text={'Task 1'}/>\r\n\t\t\t\t\t<Task text={'Task 2'}/>\r\n\t\t\t\t\t<Task text={'Task 3'}/>\r\n\t\t\t\t\t<Task text={'Task 4'}/>\r\n\t\t\t\t\t<Task text={'Task 5'}/>\r\n\t\t\t\t</View>\r\n\r\n\t\t\t</View>\r\n\t\t\t{/*Text Input for writing a task*/}\r\n\t\t\t{/* Uses a keyboard avoiding view which ensures the keyboard does not cover the items on screen */}\r\n\t\t\t<KeyboardAvoidingView \r\n\t\t\t\tbehavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n\t\t\t\tstyle={styles.writeTaskWrapper}\r\n\t\t\t>\r\n\t\t\t\t<TextInput style={styles.input} placeholder={'Write a task'} value={task} onChangeText={text => setTask(text)} />\r\n\t\t\t\t<TouchableOpacity onPress={() => handleAddTask()}>\r\n\t\t\t\t\t<View style={styles.addWrapper}>\r\n\t\t\t\t\t\t<Text style={styles.addText}>+</Text>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t</KeyboardAvoidingView>\r\n\t\t\t\r\n\t\t</View>\r\n\r\n\t);\r\n}\r\n\r\n\tconst styles = StyleSheet.create({\r\n\t\tcontainer: {\r\n\t\t\tflex: 1,\r\n\t\t\tbackgroundColor: '#ffcfe6',\r\n\r\n\t\t},\r\n\t\ttasksWrapper: {\r\n\t\t\tpaddingTop: 80, \r\n\t\t\tpaddingHorizontal: 40,\r\n\t\t\t},\r\n\t\tsectionTitle: {\r\n\t\t\tfontSize: 24,\r\n\t\t\tfontFamily: 'helvetica',\r\n\t\t\tfontWeight: 'bold',\r\n\t\t\t},\r\n\t\titems: {\r\n\t\t\tmarginTop: 30,\r\n\t\t},\r\n\t\taddText: {},\r\n\t\taddWrapper: {\r\n\t\t\twidth: 60,\r\n\t\t\theight: 60,\r\n\t\t\tbackgroundColor: '#fff',\r\n\t\t\tborderRadius: 60,\r\n\t\t\tjustifyContents: 'center',\r\n\t\t\talignItems: 'center',\r\n\t\t},\r\n\t\tinput: {\r\n\t\t\tpaddingVertical: 15,\r\n\t\t\tpaddingHorizontal: 15,\r\n\t\t\tbackgroundColor: '#fff',\r\n\t\t\tborderRadius: 60,\r\n\t\t\tborderColor: '#ffcfe6',\r\n\t\t\tborderWidth: 1,\r\n\t\t\twidth: 250,\r\n\t\t},\r\n\t\twriteTaskWrapper: {\r\n\t\t\tposition: 'absolute',\r\n\t\t\tbottom: 60,\r\n\t\t\twidth: '100%',\r\n\t\t\tflexDirection: 'row',\r\n\t\t\tjustifyContents: 'space-around',\r\n\t\t\talignItems: 'center',\r\n\t\t},\r\n\t});\r\n\r\n"]},"metadata":{},"sourceType":"module"}
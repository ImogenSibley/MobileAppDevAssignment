{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\n\nvar _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport CustomButton from \"../../components/customButton\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Profile = function Profile(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstName = _useState4[0],\n      setFirstName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastName = _useState6[0],\n      setLastName = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      friendCount = _useState8[0],\n      setFriendCount = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      posts = _useState10[0],\n      setPosts = _useState10[1];\n\n  var getUserData = function getUserData() {\n    var value, userID;\n    return _regeneratorRuntime.async(function getUserData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n          case 5:\n            userID = _context2.sent;\n            return _context2.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID, {\n              'headers': {\n                'X-Authorization': value\n              }\n            }).then(function (response) {\n              if (response.status === 200) {\n                return response.json();\n              } else if (response.status === 401) {\n                _this.props.navigation.navigate(\"Login\");\n              } else {\n                throw 'Something went wrong';\n              }\n            }).then(function _callee(responseJson) {\n              var first, last, emailAddress, friends;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      console.log(responseJson);\n                      first = responseJson.first_name;\n                      setFirstName(first);\n                      last = responseJson.last_name;\n                      setLastName(last);\n                      emailAddress = responseJson.email;\n                      setEmail(emailAddress);\n                      friends = responseJson.friend_count;\n                      friends, _readOnlyError(\"setFriendCount\");\n\n                    case 9:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getAllPosts = function getAllPosts() {\n    var value, userID;\n    return _regeneratorRuntime.async(function getAllPosts$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n          case 5:\n            userID = _context3.sent;\n            return _context3.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post\", {\n              'headers': {\n                'X-Authorization': value\n              }\n            }).then(function (response) {\n              if (response.status === 200) {\n                return response.json();\n              } else if (response.status === 401) {\n                _this.props.navigation.navigate(\"Login\");\n              } else {\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              console.log(responseJson);\n              setPosts(responseJson);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var ItemView = function ItemView(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(Text, {\n      style: styles.post,\n      children: [item.id, item.author.first_name, ' ', item.author.last_name, ' - ', item.text, ' ', item.timestamp, ' - Likes: ', item.numLikes]\n    });\n  };\n\n  var ItemSeperatorView = function ItemSeperatorView() {\n    return _jsx(View, {\n      style: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: 'white'\n      }\n    });\n  };\n\n  var checkLoggedIn = function checkLoggedIn() {\n    var value;\n    return _regeneratorRuntime.async(function checkLoggedIn$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context4.sent;\n\n            if (value == null) {\n              _this.props.navigation.navigate('Login');\n            }\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onViewFriendsListPressed = function onViewFriendsListPressed() {\n    navigation.navigate(\"Friends\");\n  };\n\n  useEffect(function () {\n    checkLoggedIn();\n    getUserData();\n    getAllPosts();\n  }, []);\n  return _jsxs(SafeAreaView, {\n    style: styles.root,\n    children: [_jsx(View, {\n      style: styles.header\n    }), _jsx(Image, {\n      style: styles.avatar,\n      source: {\n        uri: 'https://miro.medium.com/max/3150/1*I8orYDhyFrbI-p21DstL6A.jpeg'\n      }\n    }), _jsx(View, {\n      style: styles.body,\n      children: _jsxs(View, {\n        style: styles.bodyContent,\n        children: [_jsxs(Text, {\n          style: styles.name,\n          children: [firstName, \" \", lastName]\n        }), _jsx(Text, {\n          style: styles.info,\n          children: email\n        }), _jsx(Text, {\n          style: styles.info,\n          children: friendCount\n        }), _jsx(CustomButton, {\n          text: \"View Friends List\",\n          onPress: onViewFriendsListPressed\n        }), _jsx(View, {\n          style: styles.postContainer,\n          children: _jsx(FlatList, {\n            data: posts,\n            keyExtractor: function keyExtractor(item, index) {\n              return index.toString();\n            },\n            ItemSeperatorComponent: ItemSeperatorView,\n            renderItem: ItemView\n          })\n        })]\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: '#ffcfe6'\n  },\n  header: {\n    backgroundColor: \"#45ded0\",\n    height: 200\n  },\n  avatar: {\n    width: 130,\n    height: 130,\n    borderRadius: 63,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10,\n    alignSelf: 'center',\n    position: 'absolute',\n    marginTop: 130\n  },\n  body: {\n    marginTop: 40\n  },\n  bodyContent: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 30\n  },\n  name: {\n    fontSize: 28,\n    color: \"#696969\",\n    fontWeight: \"600\"\n  },\n  info: {\n    fontSize: 16,\n    color: \"#696969\",\n    marginTop: 10\n  },\n  postContainer: {\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderColor: '#45ded0',\n    borderWidth: 2\n  },\n  post: {\n    fontSize: 16,\n    color: \"#696969\",\n    fontWeight: 'bold',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 10\n  }\n});\nexport default Profile;","map":{"version":3,"sources":["F:/Year 3/Mobile App Dev/MADAssignment/master/screens/Profile/Profile.js"],"names":["React","useState","useEffect","CustomButton","AsyncStorage","Profile","navigation","email","setEmail","firstName","setFirstName","lastName","setLastName","friendCount","setFriendCount","posts","setPosts","getUserData","getItem","value","userID","fetch","then","response","status","json","props","navigate","responseJson","console","log","first","first_name","last","last_name","emailAddress","friends","friend_count","catch","error","getAllPosts","ItemView","item","styles","post","id","author","text","timestamp","numLikes","ItemSeperatorView","height","width","backgroundColor","checkLoggedIn","onViewFriendsListPressed","root","header","avatar","uri","body","bodyContent","name","info","postContainer","index","toString","StyleSheet","create","flex","borderRadius","borderWidth","borderColor","marginBottom","alignSelf","position","marginTop","alignItems","padding","fontSize","color","fontWeight","paddingHorizontal","paddingVertical"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Text, View, SafeAreaView, StyleSheet, Image, TouchableOpacity, FlatList } from 'react-native';\r\nimport CustomButton from '../../components/customButton'; \r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\nconst Profile = ({ navigation }) => {\r\n    const [email, setEmail] = useState('');\r\n\tconst [firstName, setFirstName] = useState('');\r\n\tconst [lastName, setLastName] = useState('');\r\n    const [friendCount, setFriendCount] = useState('');\r\n    const [posts, setPosts] = useState('');\r\n\r\n\tconst getUserData = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        const userID = await AsyncStorage.getItem('@user_id')\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\"+userID, {\r\n            'headers': {\r\n            'X-Authorization':  value\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if(response.status === 200){\r\n                return response.json()\r\n            }else if(response.status === 401){\r\n              this.props.navigation.navigate(\"Login\");\r\n            }else{\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then(async (responseJson) => {\r\n            console.log(responseJson);\r\n            let first = responseJson.first_name; \r\n            setFirstName(first);\r\n            let last = responseJson.last_name; \r\n            setLastName(last);\r\n            let emailAddress = responseJson.email;\r\n            setEmail(emailAddress);\r\n            let friends = responseJson.friend_count;\r\n            setFriendCount = friends;\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const getAllPosts = async () => {\r\n    const value = await AsyncStorage.getItem('@session_token');\r\n        const userID = await AsyncStorage.getItem('@user_id')\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\"+userID+\"/post\", {\r\n            'headers': {\r\n            'X-Authorization':  value\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if(response.status === 200){\r\n                return response.json()\r\n            }else if(response.status === 401){\r\n              this.props.navigation.navigate(\"Login\");\r\n            }else{\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            console.log(responseJson);\r\n            setPosts(responseJson);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const ItemView = ({item}) => {\r\n    return (\r\n        <Text style={styles.post}>\r\n            {item.id}{item.author.first_name}{' '}{item.author.last_name}{' - '}{item.text}{' '}{item.timestamp}{' - Likes: '}{item.numLikes}\r\n        </Text>\r\n    );\r\n  }\r\n\r\n  const ItemSeperatorView = () => {\r\n    return (\r\n        <View \r\n            style={{height: 0.5, width: '100%', backgroundColor: 'white'}}\r\n        />\r\n    );\r\n  }\r\n    \r\n    const checkLoggedIn = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        if (value == null) {\r\n            this.props.navigation.navigate('Login');\r\n        }\r\n    };\r\n\r\n    const onViewFriendsListPressed = () => {\r\n\t\tnavigation.navigate(\"Friends\");\r\n\t};\r\n\r\n    useEffect(() => {\r\n        checkLoggedIn();\r\n        getUserData();\r\n        getAllPosts();\r\n    }, [])\r\n\r\n\treturn (\r\n        \r\n\t\t<SafeAreaView style={styles.root}>\r\n            <View style={styles.header}></View>\r\n            <Image style={styles.avatar} source={{uri: 'https://miro.medium.com/max/3150/1*I8orYDhyFrbI-p21DstL6A.jpeg'}}/>\r\n                <View style={styles.body}>\r\n                    <View style={styles.bodyContent}>\r\n                        <Text style={styles.name}>{firstName} {lastName}</Text>\r\n                        <Text style={styles.info}>{email}</Text>\r\n                        <Text style={styles.info}>{friendCount}</Text>\r\n\t\t\t            <CustomButton text=\"View Friends List\" onPress={onViewFriendsListPressed}/>\r\n                        <View style={styles.postContainer}>\r\n                            <FlatList\r\n                                data={posts}\r\n                                keyExtractor={(item, index) => index.toString()}\r\n                                ItemSeperatorComponent={ItemSeperatorView}\r\n                                renderItem={ItemView}\r\n                            />\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n\t\t</SafeAreaView>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#ffcfe6',\r\n\t},\r\n    header:{\r\n        backgroundColor: \"#45ded0\",\r\n        height:200,\r\n    },\r\n    avatar: {\r\n        width: 130,\r\n        height: 130,\r\n        borderRadius: 63,\r\n        borderWidth: 4,\r\n        borderColor: \"white\",\r\n        marginBottom:10,\r\n        alignSelf:'center',\r\n        position: 'absolute',\r\n        marginTop:130\r\n    },\r\n    body:{\r\n        marginTop:40,\r\n    },\r\n    bodyContent: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        padding:30,\r\n    },\r\n    name:{\r\n        fontSize:28,\r\n        color: \"#696969\",\r\n        fontWeight: \"600\"\r\n    },\r\n    info:{\r\n        fontSize:16,\r\n        color: \"#696969\",\r\n        marginTop:10\r\n    },\r\n    postContainer: {\r\n    \tbackgroundColor: '#ffffff',\r\n\t\twidth: '90%',\r\n\t\tborderColor: '#45ded0',\r\n\t\tborderWidth: 2,\t\r\n    },\r\n    post: {\r\n        fontSize:16,\r\n        color: \"#696969\",\r\n        fontWeight: 'bold',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 10,\r\n    }\r\n});\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}
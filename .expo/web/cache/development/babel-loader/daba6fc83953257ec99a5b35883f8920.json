{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport CustomInput from \"../../components/customInput\";\nimport CustomButton from \"../../components/customButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState('Coffee@gmail.com'),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState('password'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMess = _useState6[0],\n      setErrorMess = _useState6[1];\n\n  var onLoginPressed = function onLoginPressed() {\n    return _regeneratorRuntime.async(function onLoginPressed$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/login\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"email\": email,\n                \"password\": password\n              })\n            }).then(function (response) {\n              if (response.status === 201 || response.status === 200) {\n                console.log(\"fetch successful!\");\n                return response.json();\n              } else if (response.status === 400) {\n                setErrorMess(\"This user does not exist.\");\n                throw \"Bad data - Non existant user?\";\n              } else {\n                throw \"Something went wrong: \" + response.status;\n              }\n            }).then(function _callee(responseJson) {\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return _regeneratorRuntime.awrap(AsyncStorage.setItem('@session_token', responseJson.token));\n\n                    case 2:\n                      _context.next = 4;\n                      return _regeneratorRuntime.awrap(AsyncStorage.setItem('@user_id', responseJson.id));\n\n                    case 4:\n                      _context.next = 6;\n                      return _regeneratorRuntime.awrap(AsyncStorage.setItem('@first_name', responseJson.firstName));\n\n                    case 6:\n                      navigation.navigate(\"Home\");\n\n                    case 7:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              console.log(err);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSignUpPressed = function onSignUpPressed() {\n    navigation.navigate(\"Signup\");\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.root,\n    children: [_jsx(View, {\n      style: styles.container,\n      children: _jsx(View, {\n        style: styles.titleContainer,\n        children: _jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Login\"\n        })\n      })\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsx(Text, {\n        children: errorMess\n      })\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsx(CustomInput, {\n        placeholder: \"Email\",\n        value: email,\n        setValue: setEmail\n      })\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsx(CustomInput, {\n        secureTextEntry: true,\n        placeholder: \"Password\",\n        value: password,\n        setValue: setPassword\n      })\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsx(CustomButton, {\n        text: \"Login\",\n        onPress: onLoginPressed\n      })\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsx(CustomButton, {\n        text: \"Create an Account\",\n        onPress: onSignUpPressed\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: '#ffcfe6',\n    justifyContent: 'center'\n  },\n  container: {\n    alignItems: 'center',\n    paddingTop: 10\n  },\n  titleContainer: {\n    paddingTop: 40,\n    paddingHorizontal: 40\n  },\n  sectionTitle: {\n    fontSize: 28,\n    color: \"#696969\",\n    fontWeight: \"600\"\n  }\n});\nexport default Login;","map":{"version":3,"sources":["E:/Year 3/Mobile App Dev/MADAssignment/master/screens/Login/Login.js"],"names":["React","useState","AsyncStorage","CustomInput","CustomButton","Login","navigation","email","setEmail","password","setPassword","errorMess","setErrorMess","onLoginPressed","fetch","method","headers","body","JSON","stringify","then","response","status","console","log","json","responseJson","setItem","token","id","firstName","navigate","catch","err","onSignUpPressed","styles","root","container","titleContainer","sectionTitle","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","paddingTop","paddingHorizontal","fontSize","color","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { View, Text, StyleSheet, TextInput, Image, SafeAreaView } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport CustomInput from '../../components/customInput';\r\nimport CustomButton from '../../components/customButton';\r\n//----------------------------------------------\r\n//Login Screen\r\n\r\nconst Login = ({ navigation }) => {\r\n\t\r\n\tconst [email, setEmail] = useState('Coffee@gmail.com');\r\n\tconst [password, setPassword] = useState('password');\r\n\tconst [errorMess, setErrorMess] = useState('');\r\n\r\n\tconst onLoginPressed = async () => {\r\n\t\t//GET login details from server\r\n\t\treturn fetch(\"http://localhost:3333/api/1.0.0/login\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\"email\": email,\r\n\t\t\t\t\"password\": password\r\n\t\t\t})\r\n\t\t}).then((response) => {\r\n\t\t\tif (response.status === 201 || response.status === 200 ) {\r\n\t\t\t\tconsole.log(\"fetch successful!\")\r\n\t\t\t\treturn response.json();\r\n\t\t\t} else if (response.status === 400) {\r\n\t\t\t\tsetErrorMess(\"This user does not exist.\");\r\n\t\t\t\tthrow \"Bad data - Non existant user?\"\r\n\t\t\t} else {\r\n\t\t\t\tthrow \"Something went wrong: \" + response.status\r\n\t\t\t}\r\n\t\t}).then(async (responseJson) => {\r\n\t\t\tawait AsyncStorage.setItem('@session_token', responseJson.token);\r\n\t\t\tawait AsyncStorage.setItem('@user_id', responseJson.id);\r\n\t\t\tawait AsyncStorage.setItem('@first_name', responseJson.firstName);\r\n            navigation.navigate(\"Home\");\r\n\t\t}).catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t})\r\n\t}\r\n\r\n\tconst onSignUpPressed = () => {\r\n\t\tnavigation.navigate(\"Signup\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<SafeAreaView style={styles.root}>\r\n\t\t\t<View style={styles.container}>\r\n\t\t\t\t{/*Spacebook Logo*/}\r\n\t\t\t\t{/*Login Title*/}\r\n\t\t\t\t<View style={styles.titleContainer}>\r\n\t\t\t\t\t<Text style={styles.sectionTitle}>Login</Text>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t\t<View style={styles.container}>\r\n\t\t\t\t<Text>{errorMess}</Text>\r\n\t\t\t</View>\r\n\t\t\t<View style={styles.container}>\r\n\t\t\t\t{/*Text Input for logging in*/}\r\n\t\t\t\t<CustomInput placeholder=\"Email\" value={email} setValue={setEmail} />\r\n\t\t\t</View>\r\n\t\t\t<View style={styles.container}>\r\n\t\t\t\t<CustomInput secureTextEntry={true} placeholder=\"Password\" value={password} setValue={setPassword} />\r\n\t\t\t</View>\r\n\t\t\t<View style={styles.container}>\r\n\t\t\t\t{/*Button to Click Login*/}\r\n\t\t\t\t<CustomButton text=\"Login\" onPress={onLoginPressed} />\r\n\t\t\t</View>\r\n\t\t\t<View style={styles.container}>\r\n\t\t\t\t{/*Button to Sign Up*/}\r\n\t\t\t\t<CustomButton text=\"Create an Account\" onPress={onSignUpPressed} />\r\n\t\t\t</View>\r\n\t\t</SafeAreaView>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#ffcfe6',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n\tcontainer: {\r\n        alignItems: 'center',\r\n        paddingTop: 10,\r\n\t},\r\n\ttitleContainer: {\r\n\t\tpaddingTop: 40,\r\n\t\tpaddingHorizontal: 40,\r\n\t},\r\n\tsectionTitle: {\r\n\t\tfontSize:28,\r\n        color: \"#696969\",\r\n        fontWeight: \"600\"\r\n\t}\r\n});\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}
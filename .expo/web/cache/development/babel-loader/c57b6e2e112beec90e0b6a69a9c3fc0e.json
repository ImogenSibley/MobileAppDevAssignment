{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport CustomInput from \"../../components/customInput\";\nimport CustomButton from \"../../components/customButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AccountSettings = function AccountSettings() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passwordCheck = _useState6[0],\n      setPasswordCheck = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      firstName = _useState8[0],\n      setFirstName = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      lastName = _useState10[0],\n      setLastName = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      errorMess = _useState12[0],\n      setErrorMess = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isLoading = _useState14[0],\n      setIsLoading = _useState14[1];\n\n  var updateAccountDetails = function updateAccountDetails(firstInput, lastInput, emailInput, passInput) {\n    var value, userID;\n    return _regeneratorRuntime.async(function updateAccountDetails$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n          case 2:\n            value = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@user_id\"));\n\n          case 5:\n            userID = _context.sent;\n            validateEmail(email);\n            console.log(validateEmail(email));\n\n            if (!(validateEmail(email) == true)) {\n              _context.next = 17;\n              break;\n            }\n\n            if (!(password.length >= 6 && password.match(passwordCheck))) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID, {\n              method: 'PATCH',\n              headers: {\n                \"X-Authorization\": value,\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"first_name\": firstInput,\n                \"last_name\": lastInput,\n                \"email\": emailInput,\n                \"password\": passInput\n              })\n            }).then(function (response) {\n              if (response.status === 200 || response.status === 201) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                console.log(response.status);\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              setErrorMess('Account Updated.');\n              console.log('Account Updated.');\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 13:\n            setErrorMess(\"Password is not strong enough or passwords don't match.\");\n            throw \"Bad data - Passwords don't match\";\n\n          case 15:\n            _context.next = 19;\n            break;\n\n          case 17:\n            setErrorMess(\"Invalid Email.\");\n            throw \"Bad data - Email is not valid.\";\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var validateEmail = function validateEmail(email) {\n    var expression = /(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([\\t]*\\r\\n)?[\\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([\\t]*\\r\\n)?[\\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i;\n    return expression.test(String(email).toLowerCase());\n  };\n\n  var checkLoggedIn = function checkLoggedIn() {\n    var value;\n    return _regeneratorRuntime.async(function checkLoggedIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context2.sent;\n\n            if (value == null) {\n              navigation.navigate('Login');\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    checkLoggedIn();\n  }, []);\n\n  if (isLoading) {\n    return _jsx(SafeAreaView, {\n      style: styles.root,\n      children: _jsx(View, {\n        children: _jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Loading...\"\n        })\n      })\n    });\n  } else {\n    return _jsxs(SafeAreaView, {\n      style: styles.root,\n      children: [_jsx(View, {\n        style: styles.header,\n        children: _jsx(View, {\n          style: styles.titleContainer,\n          children: _jsx(Text, {\n            style: styles.sectionTitle,\n            children: \"Update Account Details\"\n          })\n        })\n      }), _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: styles.post,\n          children: errorMess\n        }), _jsx(CustomInput, {\n          placeholder: \"First Name\",\n          value: firstName,\n          setValue: setFirstName\n        }), _jsx(CustomInput, {\n          placeholder: \"Last Name\",\n          value: lastName,\n          setValue: setLastName\n        }), _jsx(CustomInput, {\n          placeholder: \"Email\",\n          value: email,\n          setValue: setEmail\n        }), _jsx(CustomInput, {\n          secureTextEntry: true,\n          placeholder: \"Password\",\n          value: password,\n          setValue: setPassword\n        }), _jsx(CustomInput, {\n          secureTextEntry: true,\n          placeholder: \"Confirm Password\",\n          value: passwordCheck,\n          setValue: setPasswordCheck\n        }), _jsx(CustomButton, {\n          text: \"Save Changes\",\n          onPress: function onPress() {\n            return updateAccountDetails(firstName, lastName, email, password, passwordCheck);\n          }\n        })]\n      })]\n    });\n  }\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: '#ffcfe6'\n  },\n  header: {\n    backgroundColor: \"#45ded0\",\n    height: 200\n  },\n  body: {\n    marginTop: 40\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 30\n  },\n  titleContainer: {\n    paddingTop: 80,\n    paddingHorizontal: 40,\n    padding: 30,\n    alignSelf: 'center'\n  },\n  sectionTitle: {\n    fontSize: 28,\n    color: \"#696969\",\n    fontWeight: \"600\",\n    alignItems: 'center'\n  },\n  postContainer: {\n    justifyContent: 'space-between',\n    alignSelf: 'center',\n    alignContent: 'center',\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderColor: '#45ded0',\n    borderWidth: 1\n  },\n  post: {\n    fontSize: 16,\n    color: \"#696969\",\n    fontWeight: 'bold',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 10\n  }\n});\nexport default AccountSettings;","map":{"version":3,"sources":["E:/Year 3/Mobile App Dev/MADAssignment/master/screens/AccountSettings/AccountSettings.js"],"names":["React","useState","useEffect","AsyncStorage","CustomInput","CustomButton","AccountSettings","email","setEmail","password","setPassword","passwordCheck","setPasswordCheck","firstName","setFirstName","lastName","setLastName","errorMess","setErrorMess","isLoading","setIsLoading","updateAccountDetails","firstInput","lastInput","emailInput","passInput","getItem","value","userID","validateEmail","console","log","length","match","fetch","method","headers","body","JSON","stringify","then","response","status","json","navigation","navigate","responseJson","catch","error","expression","test","String","toLowerCase","checkLoggedIn","styles","root","sectionTitle","header","titleContainer","container","post","StyleSheet","create","flex","backgroundColor","height","marginTop","alignItems","padding","paddingTop","paddingHorizontal","alignSelf","fontSize","color","fontWeight","postContainer","justifyContent","alignContent","width","borderColor","borderWidth","paddingVertical"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Text, View, SafeAreaView, StyleSheet, ActivityIndicator, FlatList, Button, Alert, AsyncStorage } from 'react-native';\r\nimport CustomInput from '../../components/customInput';\r\nimport CustomButton from '../../components/customButton';\r\n\r\nconst AccountSettings = () => {\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n\tconst [firstName, setFirstName] = useState('');\r\n\tconst [lastName, setLastName] = useState('');\r\n\tconst [errorMess, setErrorMess] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const updateAccountDetails = async (firstInput, lastInput, emailInput, passInput) => {\r\n        const value = await AsyncStorage.getItem(\"@session_token\");\r\n        const userID = await AsyncStorage.getItem(\"@user_id\")\r\n\r\n        // Check email is email\r\n\t\tvalidateEmail(email);\r\n\t\tconsole.log(validateEmail(email));\r\n\t\tif (validateEmail(email) == true) {\r\n            // Check password is greater than 6 chars and matches confirm pass\r\n\t\t    if (password.length >= 6 && password.match(passwordCheck)) {\r\n                return fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID, {\r\n                    method: 'PATCH',\r\n                    headers: {\r\n                        \"X-Authorization\": value,\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"first_name\": firstInput,\r\n                        \"last_name\": lastInput,\r\n                        \"email\": emailInput,\r\n                        \"password\": passInput,\r\n                    })\r\n                }).then((response) => {\r\n                    if (response.status === 200 || response.status === 201) {\r\n                        return response.json()\r\n                    } else if (response.status === 401) {\r\n                        navigation.navigate(\"Login\");\r\n                    } else {\r\n                        console.log(response.status);\r\n                        throw 'Something went wrong';\r\n                    }\r\n                }).then((responseJson) => {\r\n                    setErrorMess('Account Updated.');\r\n                    console.log('Account Updated.');\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                })\r\n            } else {\r\n\t\t\t    setErrorMess(\"Password is not strong enough or passwords don't match.\");\r\n\t\t\t    throw \"Bad data - Passwords don't match\"\r\n            }\r\n        } else {\r\n\t\t\tsetErrorMess(\"Invalid Email.\");\r\n\t\t\tthrow \"Bad data - Email is not valid.\"\r\n\t\t}\r\n    }\r\n\r\n\tconst validateEmail = (email) => {\r\n\t\tconst expression = /(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([\\t]*\\r\\n)?[\\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([\\t]*\\r\\n)?[\\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i;\r\n\t\treturn expression.test(String(email).toLowerCase())\r\n\t}\r\n\r\n    const checkLoggedIn = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        if (value == null) {\r\n            navigation.navigate('Login');\r\n        }\r\n    };\r\n\r\n     useEffect(() => {\r\n        checkLoggedIn();\r\n    }, [])\r\n\r\n\t   if (isLoading) {\r\n        return (\r\n            <SafeAreaView style={styles.root}>\r\n                <View><Text style={styles.sectionTitle}>Loading...</Text></View>\r\n            </SafeAreaView>\r\n        );\r\n    } else {\r\n        return (\r\n            <SafeAreaView style={styles.root}>\r\n                <View style={styles.header}>\r\n                    {/*Spacebook Logo*/}\r\n                    {/*Update Account Details Page*/}\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={styles.sectionTitle}>Update Account Details</Text>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.container}>\r\n                     <Text style={styles.post}>{errorMess}</Text>\r\n                     {/*Text Input for Updating Details*/}\r\n                     <CustomInput placeholder=\"First Name\" value={firstName} setValue={setFirstName} />\r\n                     <CustomInput placeholder=\"Last Name\" value={lastName} setValue={setLastName} />\r\n                     <CustomInput placeholder=\"Email\" value={email} setValue={setEmail} />\r\n                     <CustomInput secureTextEntry={true} placeholder=\"Password\" value={password} setValue={setPassword} />\r\n\t\t\t\t\t <CustomInput secureTextEntry={true} placeholder=\"Confirm Password\" value={passwordCheck} setValue={setPasswordCheck} />\r\n                     {/*Button to Save Changes or Delete*/}\r\n                     <CustomButton text=\"Save Changes\" onPress={() => updateAccountDetails(firstName, lastName, email, password, passwordCheck)} />\r\n                </View>\r\n            </SafeAreaView>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#ffcfe6',\r\n\t},\r\n    header:{\r\n        backgroundColor: \"#45ded0\",\r\n        height:200,\r\n    },\r\n    body:{\r\n        marginTop:40,\r\n    },\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n        alignItems: 'center',\r\n        padding: 30,\r\n\t},\r\n\ttitleContainer: {\r\n\t\tpaddingTop: 80,\r\n\t\tpaddingHorizontal: 40,\r\n        padding: 30,\r\n        alignSelf: 'center'\r\n\t},\r\n\tsectionTitle: {\r\n        fontSize:28,\r\n        color: \"#696969\",\r\n        fontWeight: \"600\",\r\n        alignItems: 'center',\r\n\t},\r\n    postContainer: {\r\n        justifyContent: 'space-between',\r\n        alignSelf: 'center',\r\n        alignContent: 'center',\r\n    \tbackgroundColor: '#ffffff',\r\n        width: '90%',\r\n\t\tborderColor: '#45ded0',\r\n\t\tborderWidth: 1,\t\r\n    },\r\n    post: {\r\n        fontSize:16,\r\n        color: \"#696969\",\r\n        fontWeight: 'bold',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 10,\r\n    }\r\n});\r\n\r\nexport default AccountSettings;"]},"metadata":{},"sourceType":"module"}
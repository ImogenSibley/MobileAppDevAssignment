{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport CustomButtonSmall from \"../../components/customButtonSmall\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Friends = function Friends(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      friendList = _useState2[0],\n      setFriendList = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filterFriendList = _useState6[0],\n      setFilterFriendList = _useState6[1];\n\n  var _useState7 = useState('0 friends.'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMess = _useState8[0],\n      setErrorMess = _useState8[1];\n\n  var getFriendList = function getFriendList() {\n    var value, userID;\n    return _regeneratorRuntime.async(function getFriendList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n          case 5:\n            userID = _context.sent;\n            return _context.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/friends\", {\n              'headers': {\n                'X-Authorization': value\n              }\n            }).then(function (response) {\n              if (response.status === 200) {\n                return response.json();\n              } else if (response.status === 401) {\n                navigation.navigate(\"Login\");\n              } else {\n                throw 'Something went wrong';\n              }\n            }).then(function (responseJson) {\n              if (responseJson.length !== 0) {\n                setErrorMess('');\n              }\n\n              console.log(responseJson);\n              setFriendList(responseJson);\n              setFilterUserList(responseJson);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var searchFilter = function searchFilter(text) {\n    if (text) {\n      var newData = userList.filter(function (item) {\n        var itemData = item.user_givenname ? item.user_givenname.toUpperCase() : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setFilterUserList(newData);\n      setSearch(text);\n    } else {\n      setFilterUserList(userList);\n      setSearch(text);\n    }\n  };\n\n  var onViewProfilePressed = function onViewProfilePressed(requestedUserID) {\n    navigation.navigate(\"Friend Profile\", {\n      requestedUserID: requestedUserID\n    });\n  };\n\n  var checkLoggedIn = function checkLoggedIn() {\n    var value;\n    return _regeneratorRuntime.async(function checkLoggedIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n          case 2:\n            value = _context2.sent;\n\n            if (value == null) {\n              navigation.navigate('Login');\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var ItemView = function ItemView(_ref2) {\n    var item = _ref2.item;\n    return _jsx(View, {\n      children: _jsxs(Text, {\n        style: styles.text,\n        children: [item.id, item.user_givenname, ' ', item.user_familyname, ' ', _jsx(CustomButtonSmall, {\n          text: \"View Profile\",\n          onPress: function onPress() {\n            return onViewProfilePressed(item.user_id);\n          }\n        })]\n      })\n    });\n  };\n\n  var ItemSeperatorView = function ItemSeperatorView() {\n    return _jsx(View, {\n      style: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: 'white'\n      }\n    });\n  };\n\n  useEffect(function () {\n    checkLoggedIn();\n    getFriendList();\n  }, []);\n  return _jsx(SafeAreaView, {\n    style: styles.root,\n    children: _jsxs(ScrollView, {\n      children: [_jsx(View, {\n        style: styles.header,\n        children: _jsx(View, {\n          style: styles.titleContainer,\n          children: _jsx(Text, {\n            style: styles.sectionTitle,\n            children: \"My Friends\"\n          })\n        })\n      }), _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: styles.text,\n          children: errorMess\n        }), _jsx(TextInput, {\n          style: styles.inputContainer,\n          placeholder: \"Find Friends...\",\n          onChangeText: function onChangeText(text) {\n            return searchFilter(text);\n          },\n          value: search\n        }), _jsx(View, {\n          style: styles.text,\n          children: _jsx(FlatList, {\n            data: friendList,\n            keyExtractor: function keyExtractor(item, index) {\n              return index.toString();\n            },\n            ItemSeperatorComponent: ItemSeperatorView,\n            renderItem: ItemView\n          })\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: '#ffcfe6'\n  },\n  header: {\n    backgroundColor: \"#45ded0\",\n    height: 200\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 30\n  },\n  titleContainer: {\n    paddingTop: 80,\n    paddingHorizontal: 40,\n    alignItems: 'center'\n  },\n  sectionTitle: {\n    fontSize: 28,\n    color: \"#696969\",\n    fontWeight: \"600\"\n  },\n  text: {\n    fontSize: 16,\n    color: \"#696969\",\n    marginTop: 10,\n    fontWeight: 'bold'\n  },\n  inputContainer: {\n    backgroundColor: '#fff',\n    width: '90%',\n    borderRadius: 60,\n    borderColor: '#45ded0',\n    borderWidth: 2,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 60\n  }\n});\nexport default Friends;","map":{"version":3,"sources":["E:/Year 3/Mobile App Dev/MADAssignment/master/screens/Friends/Friends.js"],"names":["React","useState","useEffect","AsyncStorage","CustomButtonSmall","Friends","navigation","friendList","setFriendList","search","setSearch","filterFriendList","setFilterFriendList","errorMess","setErrorMess","getFriendList","getItem","value","userID","fetch","then","response","status","json","navigate","responseJson","length","console","log","setFilterUserList","catch","error","searchFilter","text","newData","userList","filter","item","itemData","user_givenname","toUpperCase","textData","indexOf","onViewProfilePressed","requestedUserID","checkLoggedIn","ItemView","styles","id","user_familyname","user_id","ItemSeperatorView","height","width","backgroundColor","root","header","titleContainer","sectionTitle","container","inputContainer","index","toString","StyleSheet","create","flex","justifyContent","alignItems","padding","paddingTop","paddingHorizontal","fontSize","color","fontWeight","marginTop","borderRadius","borderColor","borderWidth","paddingVertical"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { View, Text, StyleSheet, TextInput, Image, SafeAreaView, FlatList, ScrollView} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport CustomButtonSmall from '../../components/customButtonSmall';\r\n\r\nconst Friends = ({ navigation }) => {\r\n    const [friendList, setFriendList] = useState('');\r\n    const [search, setSearch] = useState('');\r\n    const [filterFriendList, setFilterFriendList] = useState('');\r\n    const [errorMess, setErrorMess] = useState('0 friends.');\r\n\r\n\tconst getFriendList = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        const userID = await AsyncStorage.getItem('@user_id')\r\n        return fetch(\"http://localhost:3333/api/1.0.0/user/\"+userID+\"/friends\", {\r\n            'headers': {\r\n            'X-Authorization':  value\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if(response.status === 200){\r\n                return response.json()\r\n            }else if(response.status === 401){\r\n              navigation.navigate(\"Login\");\r\n            }else{\r\n                throw 'Something went wrong';\r\n            }\r\n        }).then((responseJson) => {\r\n            if(responseJson.length !== 0) {\r\n                setErrorMess('');\r\n            }\r\n            console.log(responseJson);\r\n            setFriendList(responseJson);\r\n            setFilterUserList(responseJson);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const searchFilter = (text) => {\r\n        if (text) {\r\n            const newData = userList.filter((item) => {\r\n                const itemData = item.user_givenname \r\n                    ? item.user_givenname.toUpperCase()\r\n                    : ''.toUpperCase()\r\n                const textData = text.toUpperCase();\r\n                return itemData.indexOf(textData) > -1;\r\n            });\r\n            setFilterUserList(newData);\r\n            setSearch(text);\r\n        } else {\r\n            setFilterUserList(userList);\r\n            setSearch(text);\r\n        }\r\n    }\r\n\r\n    const onViewProfilePressed = (requestedUserID) => {\r\n        //store this ID to fetch details from user ID on their profile\r\n\t\tnavigation.navigate(\"Friend Profile\", {requestedUserID: requestedUserID});\r\n\t}\r\n    \r\n    const checkLoggedIn = async () => {\r\n        const value = await AsyncStorage.getItem('@session_token');\r\n        if (value == null) {\r\n            navigation.navigate('Login');\r\n        }\r\n    };\r\n\r\n    const ItemView = ({item}) => {\r\n        return (\r\n            <View>\r\n                <Text style={styles.text}>\r\n                {item.id}{item.user_givenname}{' '}{item.user_familyname}{' '}<CustomButtonSmall text=\"View Profile\" onPress={() => onViewProfilePressed(item.user_id)}/>\r\n                </Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n  const ItemSeperatorView = () => {\r\n    return (\r\n        <View \r\n            style={{height: 0.5, width: '100%', backgroundColor: 'white'}}\r\n        />\r\n    );\r\n  }\r\n\r\n    useEffect(() => {\r\n      checkLoggedIn();\r\n      getFriendList();\r\n    }, []);\r\n\r\n\treturn (\r\n\t<SafeAreaView style={styles.root}>\r\n        <ScrollView>\r\n            <View style={styles.header}>\r\n                {/*Friends Requests Page*/}\r\n                <View style={styles.titleContainer}>\r\n                    <Text style={styles.sectionTitle}>My Friends</Text>\r\n    \t        </View>\r\n            </View>\r\n            <View style={styles.container}>\r\n                <Text style={styles.text}>{errorMess}</Text>\r\n                {/*Text Input for Searching for friends*/}\r\n\t\t\t    <TextInput style={styles.inputContainer} placeholder=\"Find Friends...\" onChangeText={(text) => searchFilter(text)} value={search}/>\r\n                <View style={styles.text}>\r\n                    <FlatList\r\n                        data={friendList}\r\n                        keyExtractor={(item, index) => index.toString()}\r\n                        ItemSeperatorComponent={ItemSeperatorView}\r\n                        renderItem={ItemView}\r\n                    />\r\n                </View>  \r\n            </View>\r\n         </ScrollView>\r\n\t</SafeAreaView>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\troot: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#ffcfe6',\r\n\t},\r\n\theader:{\r\n        backgroundColor: \"#45ded0\",\r\n        height:200,\r\n    },\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tjustifyContent: 'flex-start',\r\n\t\talignItems: 'center',\r\n\t\tpadding: 30\r\n\t},\r\n\ttitleContainer: {\r\n\t\tpaddingTop: 80,\r\n\t\tpaddingHorizontal: 40,\r\n        alignItems: 'center',\r\n\t},\r\n\tsectionTitle: {\r\n\t\tfontSize:28,\r\n        color: \"#696969\",\r\n        fontWeight: \"600\"\r\n\t},\r\n    text: {\r\n        fontSize:16,\r\n        color: \"#696969\",\r\n        marginTop:10,\r\n        fontWeight: 'bold'\r\n    },\r\n    inputContainer: {\r\n\t\tbackgroundColor: '#fff',\r\n\t\twidth: '90%',\r\n\t\tborderRadius: 60,\r\n\t\tborderColor: '#45ded0',\r\n\t\tborderWidth: 2,\t\r\n        paddingHorizontal: 20,\r\n\t\tpaddingVertical: 10,\r\n\t\tborderRadius: 60,\r\n    }\r\n});\r\n\r\nexport default Friends;"]},"metadata":{},"sourceType":"module"}